{
  "OnPlayerHandcuffed(BasePlayer,BasePlayer)": {
    "prefix": "OnPlayerHandcuffed",
    "body": "void OnPlayerHandcuffed(BasePlayer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer param2"
  },
  "OnPlayerSpectate(BasePlayer,string)": {
    "prefix": "OnPlayerSpectate",
    "body": "void OnPlayerSpectate(BasePlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2"
  },
  "OnFuelConsumed(BaseOven,Item,ItemModBurnable)": {
    "prefix": "OnFuelConsumed",
    "body": "void OnFuelConsumed(BaseOven param1, Item param2, ItemModBurnable param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseOven param1, Item param2, ItemModBurnable param3"
  },
  "OnNpcConversationStart(NPCTalking,BasePlayer,ConversationData)": {
    "prefix": "OnNpcConversationStart",
    "body": "void OnNpcConversationStart(NPCTalking param1, BasePlayer param2, ConversationData param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NPCTalking param1, BasePlayer param2, ConversationData param3"
  },
  "CanAffordToPlace(BasePlayer,Planner,Construction)": {
    "prefix": "CanAffordToPlace",
    "body": "void CanAffordToPlace(BasePlayer param1, Planner param2, Construction param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Planner param2, Construction param3"
  },
  "OnCrateHack(HackableLockedCrate)": {
    "prefix": "OnCrateHack",
    "body": "void OnCrateHack(HackableLockedCrate param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HackableLockedCrate param1"
  },
  "OnDoorKnocked(DoorKnocker,BasePlayer)": {
    "prefix": "OnDoorKnocked",
    "body": "void OnDoorKnocked(DoorKnocker param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DoorKnocker param1, BasePlayer param2"
  },
  "CanLock(BasePlayer,ModularCar,ModularCarCodeLock)": {
    "prefix": "CanLock",
    "body": "void CanLock(BasePlayer param1, ModularCar param2, ModularCarCodeLock param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ModularCar param2, ModularCarCodeLock param3"
  },
  "OnGrowableGather(GrowableEntity,BasePlayer,bool)": {
    "prefix": "OnGrowableGather",
    "body": "void OnGrowableGather(GrowableEntity param1, BasePlayer param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters GrowableEntity param1, BasePlayer param2, bool param3"
  },
  "CanBeHomingTargeted(PlayerHelicopter)": {
    "prefix": "CanBeHomingTargeted",
    "body": "void CanBeHomingTargeted(PlayerHelicopter param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerHelicopter param1"
  },
  "OnItemUnlock(Item)": {
    "prefix": "OnItemUnlock",
    "body": "void OnItemUnlock(Item param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1"
  },
  "CanUseHelicopter(BasePlayer,CH47HelicopterAIController)": {
    "prefix": "CanUseHelicopter",
    "body": "void CanUseHelicopter(BasePlayer param1, CH47HelicopterAIController param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, CH47HelicopterAIController param2"
  },
  "OnTrapSnapped(BaseTrapTrigger,UnityEngine.GameObject,UnityEngine.Collider)": {
    "prefix": "OnTrapSnapped",
    "body": "void OnTrapSnapped(BaseTrapTrigger param1, UnityEngine.GameObject param2, UnityEngine.Collider param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseTrapTrigger param1, UnityEngine.GameObject param2, UnityEngine.Collider param3"
  },
  "OnBoomboxToggle(BoomBox,BasePlayer,bool)": {
    "prefix": "OnBoomboxToggle",
    "body": "void OnBoomboxToggle(BoomBox param1, BasePlayer param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BoomBox param1, BasePlayer param2, bool param3"
  },
  "OnDemoRecordingStopped(string,BasePlayer)": {
    "prefix": "OnDemoRecordingStopped",
    "body": "void OnDemoRecordingStopped(string param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, BasePlayer param2"
  },
  "OnCodeEntered(CodeLock,BasePlayer,string)": {
    "prefix": "OnCodeEntered",
    "body": "void OnCodeEntered(CodeLock param1, BasePlayer param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CodeLock param1, BasePlayer param2, string param3"
  },
  "OnCodeChanged(BasePlayer,CodeLock,string,bool)": {
    "prefix": "OnCodeChanged",
    "body": "void OnCodeChanged(BasePlayer param1, CodeLock param2, string param3, bool param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, CodeLock param2, string param3, bool param4"
  },
  "OnLiftUse(Lift,BasePlayer)": {
    "prefix": "OnLiftUse",
    "body": "void OnLiftUse(Lift param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Lift param1, BasePlayer param2"
  },
  "ICanPickupEntity(BasePlayer,DoorCloser)": {
    "prefix": "ICanPickupEntity",
    "body": "void ICanPickupEntity(BasePlayer param1, DoorCloser param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, DoorCloser param2"
  },
  "OnItemCraftFinished(ItemCraftTask,Item,ItemCrafter)": {
    "prefix": "OnItemCraftFinished",
    "body": "void OnItemCraftFinished(ItemCraftTask param1, Item param2, ItemCrafter param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemCraftTask param1, Item param2, ItemCrafter param3"
  },
  "OnItemFilter(Item,StorageContainer,int)": {
    "prefix": "OnItemFilter",
    "body": "void OnItemFilter(Item param1, StorageContainer param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, StorageContainer param2, int param3"
  },
  "CanUnlock(BasePlayer,ModularCarCodeLock,string)": {
    "prefix": "CanUnlock",
    "body": "void CanUnlock(BasePlayer param1, ModularCarCodeLock param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ModularCarCodeLock param2, string param3"
  },
  "OnSignalBroadcast(BaseEntity)": {
    "prefix": "OnSignalBroadcast",
    "body": "void OnSignalBroadcast(BaseEntity param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1"
  },
  "OnAdventGiftAward(AdventCalendar,BasePlayer)": {
    "prefix": "OnAdventGiftAward",
    "body": "void OnAdventGiftAward(AdventCalendar param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AdventCalendar param1, BasePlayer param2"
  },
  "CanUnlock(BasePlayer,KeyLock)": {
    "prefix": "CanUnlock",
    "body": "void CanUnlock(BasePlayer param1, KeyLock param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, KeyLock param2"
  },
  "OnNearbyTurretsScan(AutoTurret,System.Collections.Generic.List<AutoTurret>,bool)": {
    "prefix": "OnNearbyTurretsScan",
    "body": "void OnNearbyTurretsScan(AutoTurret param1, System.Collections.Generic.List<AutoTurret> param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, System.Collections.Generic.List<AutoTurret> param2, bool param3"
  },
  "OnEntityDestroy(CH47HelicopterAIController)": {
    "prefix": "OnEntityDestroy",
    "body": "void OnEntityDestroy(CH47HelicopterAIController param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CH47HelicopterAIController param1"
  },
  "OnExperimentEnded(Workbench)": {
    "prefix": "OnExperimentEnded",
    "body": "void OnExperimentEnded(Workbench param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Workbench param1"
  },
  "OnFishCatch(Item,BaseFishingRod,BasePlayer)": {
    "prefix": "OnFishCatch",
    "body": "void OnFishCatch(Item param1, BaseFishingRod param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BaseFishingRod param2, BasePlayer param3"
  },
  "OnWildlifeTrap(WildlifeTrap,TrappableWildlife)": {
    "prefix": "OnWildlifeTrap",
    "body": "void OnWildlifeTrap(WildlifeTrap param1, TrappableWildlife param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters WildlifeTrap param1, TrappableWildlife param2"
  },
  "OnNpcEquipWeapon(ScientistNPC,Item)": {
    "prefix": "OnNpcEquipWeapon",
    "body": "void OnNpcEquipWeapon(ScientistNPC param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ScientistNPC param1, Item param2"
  },
  "OnEventCollectablePickup(BasePlayer,CollectableEasterEgg)": {
    "prefix": "OnEventCollectablePickup",
    "body": "void OnEventCollectablePickup(BasePlayer param1, CollectableEasterEgg param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, CollectableEasterEgg param2"
  },
  "CanBeRecycled(Item,Recycler)": {
    "prefix": "CanBeRecycled",
    "body": "void CanBeRecycled(Item param1, Recycler param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, Recycler param2"
  },
  "OnQuarryConsumeFuel(MiningQuarry,Item)": {
    "prefix": "OnQuarryConsumeFuel",
    "body": "void OnQuarryConsumeFuel(MiningQuarry param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MiningQuarry param1, Item param2"
  },
  "OnOpenVendingAdmin(VendingMachine,BasePlayer)": {
    "prefix": "OnOpenVendingAdmin",
    "body": "void OnOpenVendingAdmin(VendingMachine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, BasePlayer param2"
  },
  "CanReceiveCall(PhoneController)": {
    "prefix": "CanReceiveCall",
    "body": "void CanReceiveCall(PhoneController param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1"
  },
  "OnTurretTarget(AutoTurret,BaseCombatEntity)": {
    "prefix": "OnTurretTarget",
    "body": "void OnTurretTarget(AutoTurret param1, BaseCombatEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, BaseCombatEntity param2"
  },
  "OnEntityActiveCheck(BaseEntity,BasePlayer,uint,string)": {
    "prefix": "OnEntityActiveCheck",
    "body": "void OnEntityActiveCheck(BaseEntity param1, BasePlayer param2, uint param3, string param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, BasePlayer param2, uint param3, string param4"
  },
  "CanHelicopterUseNapalm(PatrolHelicopterAI)": {
    "prefix": "CanHelicopterUseNapalm",
    "body": "void CanHelicopterUseNapalm(PatrolHelicopterAI param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatrolHelicopterAI param1"
  },
  "OnPhoneCallStarted(PhoneController,PhoneController,BasePlayer)": {
    "prefix": "OnPhoneCallStarted",
    "body": "void OnPhoneCallStarted(PhoneController param1, PhoneController param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, PhoneController param2, BasePlayer param3"
  },
  "OnSignUpdated(CarvablePumpkin,BasePlayer)": {
    "prefix": "OnSignUpdated",
    "body": "void OnSignUpdated(CarvablePumpkin param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CarvablePumpkin param1, BasePlayer param2"
  },
  "OnVendingShopOpen(VendingMachine,BasePlayer)": {
    "prefix": "OnVendingShopOpen",
    "body": "void OnVendingShopOpen(VendingMachine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, BasePlayer param2"
  },
  "OnExcavatorMiningToggled(ExcavatorArm)": {
    "prefix": "OnExcavatorMiningToggled",
    "body": "void OnExcavatorMiningToggled(ExcavatorArm param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ExcavatorArm param1"
  },
  "OnClientProjectileEffectCreate(Network.Connection,BaseProjectile,string)": {
    "prefix": "OnClientProjectileEffectCreate",
    "body": "void OnClientProjectileEffectCreate(Network.Connection param1, BaseProjectile param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1, BaseProjectile param2, string param3"
  },
  "OnHorseLead(BaseRidableAnimal,BasePlayer)": {
    "prefix": "OnHorseLead",
    "body": "void OnHorseLead(BaseRidableAnimal param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseRidableAnimal param1, BasePlayer param2"
  },
  "IOnBaseCombatEntityHurt(BaseCombatEntity,HitInfo)": {
    "prefix": "IOnBaseCombatEntityHurt",
    "body": "void IOnBaseCombatEntityHurt(BaseCombatEntity param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseCombatEntity param1, HitInfo param2"
  },
  "OnRfFrequencyChanged(RFReceiver,int,BasePlayer)": {
    "prefix": "OnRfFrequencyChanged",
    "body": "void OnRfFrequencyChanged(RFReceiver param1, int param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RFReceiver param1, int param2, BasePlayer param3"
  },
  "OnRfBroadcasterAdded(IRFObject,int)": {
    "prefix": "OnRfBroadcasterAdded",
    "body": "void OnRfBroadcasterAdded(IRFObject param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IRFObject param1, int param2"
  },
  "CanCraft(PlayerBlueprints,ItemDefinition,int)": {
    "prefix": "CanCraft",
    "body": "void CanCraft(PlayerBlueprints param1, ItemDefinition param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerBlueprints param1, ItemDefinition param2, int param3"
  },
  "OnAddVendingOffer(VendingMachine,ProtoBuf.VendingMachine.SellOrder)": {
    "prefix": "OnAddVendingOffer",
    "body": "void OnAddVendingOffer(VendingMachine param1, ProtoBuf.VendingMachine.SellOrder param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, ProtoBuf.VendingMachine.SellOrder param2"
  },
  "OnCupboardAuthorize(VehiclePrivilege,BasePlayer)": {
    "prefix": "OnCupboardAuthorize",
    "body": "void OnCupboardAuthorize(VehiclePrivilege param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VehiclePrivilege param1, BasePlayer param2"
  },
  "OnHelicopterRetire(PatrolHelicopterAI)": {
    "prefix": "OnHelicopterRetire",
    "body": "void OnHelicopterRetire(PatrolHelicopterAI param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatrolHelicopterAI param1"
  },
  "CanElevatorLiftMove(ElevatorLift)": {
    "prefix": "CanElevatorLiftMove",
    "body": "void CanElevatorLiftMove(ElevatorLift param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ElevatorLift param1"
  },
  "OnOvenStart(BaseOven)": {
    "prefix": "OnOvenStart",
    "body": "void OnOvenStart(BaseOven param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseOven param1"
  },
  "OnMapImageUpdated()": {
    "prefix": "OnMapImageUpdated",
    "body": "void OnMapImageUpdated()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "IOnNpcTarget(BaseNpc,BaseEntity)": {
    "prefix": "IOnNpcTarget",
    "body": "void IOnNpcTarget(BaseNpc param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNpc param1, BaseEntity param2"
  },
  "OnSignLocked(PhotoFrame,BasePlayer)": {
    "prefix": "OnSignLocked",
    "body": "void OnSignLocked(PhotoFrame param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhotoFrame param1, BasePlayer param2"
  },
  "OnHotAirBalloonToggle(HotAirBalloon,BasePlayer)": {
    "prefix": "OnHotAirBalloonToggle",
    "body": "void OnHotAirBalloonToggle(HotAirBalloon param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HotAirBalloon param1, BasePlayer param2"
  },
  "OnRfFrequencyChange(RFBroadcaster,int,BasePlayer)": {
    "prefix": "OnRfFrequencyChange",
    "body": "void OnRfFrequencyChange(RFBroadcaster param1, int param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RFBroadcaster param1, int param2, BasePlayer param3"
  },
  "CanLootPlayer(BasePlayer,BasePlayer)": {
    "prefix": "CanLootPlayer",
    "body": "void CanLootPlayer(BasePlayer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer param2"
  },
  "CanLootEntity(BasePlayer,BaseRidableAnimal)": {
    "prefix": "CanLootEntity",
    "body": "void CanLootEntity(BasePlayer param1, BaseRidableAnimal param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseRidableAnimal param2"
  },
  "OnHotAirBalloonToggled(HotAirBalloon,BasePlayer)": {
    "prefix": "OnHotAirBalloonToggled",
    "body": "void OnHotAirBalloonToggled(HotAirBalloon param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HotAirBalloon param1, BasePlayer param2"
  },
  "OnWorldPrefabSpawned(UnityEngine.GameObject,string)": {
    "prefix": "OnWorldPrefabSpawned",
    "body": "void OnWorldPrefabSpawned(UnityEngine.GameObject param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters UnityEngine.GameObject param1, string param2"
  },
  "OnItemStacked(Item,Item,ItemContainer)": {
    "prefix": "OnItemStacked",
    "body": "void OnItemStacked(Item param1, Item param2, ItemContainer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, Item param2, ItemContainer param3"
  },
  "OnInputUpdate(IOEntity,int,int)": {
    "prefix": "OnInputUpdate",
    "body": "void OnInputUpdate(IOEntity param1, int param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IOEntity param1, int param2, int param3"
  },
  "OnWireConnect(BasePlayer,IOEntity,int,IOEntity,int,System.Collections.Generic.List<UnityEngine.Vector3>,System.Collections.Generic.List<float>)": {
    "prefix": "OnWireConnect",
    "body": "void OnWireConnect(BasePlayer param1, IOEntity param2, int param3, IOEntity param4, int param5, System.Collections.Generic.List<UnityEngine.Vector3> param6, System.Collections.Generic.List<float> param7)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, IOEntity param2, int param3, IOEntity param4, int param5, System.Collections.Generic.List<UnityEngine.Vector3> param6, System.Collections.Generic.List<float> param7"
  },
  "OnScientistInitialized(BradleyAPC,ScientistNPC,UnityEngine.Vector3)": {
    "prefix": "OnScientistInitialized",
    "body": "void OnScientistInitialized(BradleyAPC param1, ScientistNPC param2, UnityEngine.Vector3 param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BradleyAPC param1, ScientistNPC param2, UnityEngine.Vector3 param3"
  },
  "OnPayForUpgrade(BasePlayer,BuildingBlock,ConstructionGrade)": {
    "prefix": "OnPayForUpgrade",
    "body": "void OnPayForUpgrade(BasePlayer param1, BuildingBlock param2, ConstructionGrade param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BuildingBlock param2, ConstructionGrade param3"
  },
  "OnServerRestart(string,int)": {
    "prefix": "OnServerRestart",
    "body": "void OnServerRestart(string param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, int param2"
  },
  "OnPhoneAnswer(PhoneController,PhoneController)": {
    "prefix": "OnPhoneAnswer",
    "body": "void OnPhoneAnswer(PhoneController param1, PhoneController param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, PhoneController param2"
  },
  "OnOvenTemperature(BaseOven,int)": {
    "prefix": "OnOvenTemperature",
    "body": "void OnOvenTemperature(BaseOven param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseOven param1, int param2"
  },
  "OnCoalingTowerStart(CoalingTower,BasePlayer)": {
    "prefix": "OnCoalingTowerStart",
    "body": "void OnCoalingTowerStart(CoalingTower param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CoalingTower param1, BasePlayer param2"
  },
  "CanHelicopterTarget(PatrolHelicopterAI,BasePlayer)": {
    "prefix": "CanHelicopterTarget",
    "body": "void CanHelicopterTarget(PatrolHelicopterAI param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatrolHelicopterAI param1, BasePlayer param2"
  },
  "CanDestroyLock(BasePlayer,ModularCar,BaseVehicleModule)": {
    "prefix": "CanDestroyLock",
    "body": "void CanDestroyLock(BasePlayer param1, ModularCar param2, BaseVehicleModule param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ModularCar param2, BaseVehicleModule param3"
  },
  "OnPlayerHealthChange(BasePlayer,float,float)": {
    "prefix": "OnPlayerHealthChange",
    "body": "void OnPlayerHealthChange(BasePlayer param1, float param2, float param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, float param2, float param3"
  },
  "OnDemoRecordingStart(string,BasePlayer)": {
    "prefix": "OnDemoRecordingStart",
    "body": "void OnDemoRecordingStart(string param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, BasePlayer param2"
  },
  "OnItemSubmit(Item,Mailbox,BasePlayer)": {
    "prefix": "OnItemSubmit",
    "body": "void OnItemSubmit(Item param1, Mailbox param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, Mailbox param2, BasePlayer param3"
  },
  "OnStructureRepair(BaseCombatEntity,BasePlayer)": {
    "prefix": "OnStructureRepair",
    "body": "void OnStructureRepair(BaseCombatEntity param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseCombatEntity param1, BasePlayer param2"
  },
  "CanHelicopterStrafeTarget(PatrolHelicopterAI,BasePlayer)": {
    "prefix": "CanHelicopterStrafeTarget",
    "body": "void CanHelicopterStrafeTarget(PatrolHelicopterAI param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatrolHelicopterAI param1, BasePlayer param2"
  },
  "OnStashExposed(StashContainer,BasePlayer)": {
    "prefix": "OnStashExposed",
    "body": "void OnStashExposed(StashContainer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters StashContainer param1, BasePlayer param2"
  },
  "OnLockerSwap(Locker,int,BasePlayer)": {
    "prefix": "OnLockerSwap",
    "body": "void OnLockerSwap(Locker param1, int param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Locker param1, int param2, BasePlayer param3"
  },
  "CanLootEntity(BasePlayer,StorageContainer)": {
    "prefix": "CanLootEntity",
    "body": "void CanLootEntity(BasePlayer param1, StorageContainer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, StorageContainer param2"
  },
  "OnPhoneDialTimeout(PhoneController,PhoneController,BasePlayer)": {
    "prefix": "OnPhoneDialTimeout",
    "body": "void OnPhoneDialTimeout(PhoneController param1, PhoneController param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, PhoneController param2, BasePlayer param3"
  },
  "OnVendingShopOpen(NPCVendingMachine,BasePlayer)": {
    "prefix": "OnVendingShopOpen",
    "body": "void OnVendingShopOpen(NPCVendingMachine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NPCVendingMachine param1, BasePlayer param2"
  },
  "CanRecycle(Recycler,Item)": {
    "prefix": "CanRecycle",
    "body": "void CanRecycle(Recycler param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Recycler param1, Item param2"
  },
  "OnCCTVDirectionChange(CCTV_RC,BasePlayer)": {
    "prefix": "OnCCTVDirectionChange",
    "body": "void OnCCTVDirectionChange(CCTV_RC param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CCTV_RC param1, BasePlayer param2"
  },
  "OnWaterCollect(WaterCatcher)": {
    "prefix": "OnWaterCollect",
    "body": "void OnWaterCollect(WaterCatcher param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters WaterCatcher param1"
  },
  "OnTeamPromote(RelationshipManager.PlayerTeam,BasePlayer)": {
    "prefix": "OnTeamPromote",
    "body": "void OnTeamPromote(RelationshipManager.PlayerTeam param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RelationshipManager.PlayerTeam param1, BasePlayer param2"
  },
  "OnMapMarkersClear(BasePlayer,System.Collections.Generic.List<ProtoBuf.MapNote>)": {
    "prefix": "OnMapMarkersClear",
    "body": "void OnMapMarkersClear(BasePlayer param1, System.Collections.Generic.List<ProtoBuf.MapNote> param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, System.Collections.Generic.List<ProtoBuf.MapNote> param2"
  },
  "OnFuelCheck(EntityFuelSystem)": {
    "prefix": "OnFuelCheck",
    "body": "void OnFuelCheck(EntityFuelSystem param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters EntityFuelSystem param1"
  },
  "OnSwitchToggle(IndustrialConveyor,BasePlayer)": {
    "prefix": "OnSwitchToggle",
    "body": "void OnSwitchToggle(IndustrialConveyor param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IndustrialConveyor param1, BasePlayer param2"
  },
  "OnSamSiteTargetScan(SamSite,System.Collections.Generic.List<SamSite.ISamSiteTarget>)": {
    "prefix": "OnSamSiteTargetScan",
    "body": "void OnSamSiteTargetScan(SamSite param1, System.Collections.Generic.List<SamSite.ISamSiteTarget> param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SamSite param1, System.Collections.Generic.List<SamSite.ISamSiteTarget> param2"
  },
  "OnBookmarkInput(ComputerStation,BasePlayer,InputState)": {
    "prefix": "OnBookmarkInput",
    "body": "void OnBookmarkInput(ComputerStation param1, BasePlayer param2, InputState param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ComputerStation param1, BasePlayer param2, InputState param3"
  },
  "OnItemSkinChange(int,Item,RepairBench,BasePlayer)": {
    "prefix": "OnItemSkinChange",
    "body": "void OnItemSkinChange(int param1, Item param2, RepairBench param3, BasePlayer param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters int param1, Item param2, RepairBench param3, BasePlayer param4"
  },
  "OnSupplyDropDropped(BaseEntity,CargoPlane)": {
    "prefix": "OnSupplyDropDropped",
    "body": "void OnSupplyDropDropped(BaseEntity param1, CargoPlane param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, CargoPlane param2"
  },
  "CanUseFuel(EntityFuelSystem,StorageContainer,float,float)": {
    "prefix": "CanUseFuel",
    "body": "void CanUseFuel(EntityFuelSystem param1, StorageContainer param2, float param3, float param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters EntityFuelSystem param1, StorageContainer param2, float param3, float param4"
  },
  "OnLootSpawn(LootContainer)": {
    "prefix": "OnLootSpawn",
    "body": "void OnLootSpawn(LootContainer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters LootContainer param1"
  },
  "OnPlayerAssist(BasePlayer,BasePlayer)": {
    "prefix": "OnPlayerAssist",
    "body": "void OnPlayerAssist(BasePlayer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer param2"
  },
  "IOnServerInitialized()": {
    "prefix": "IOnServerInitialized",
    "body": "void IOnServerInitialized()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "OnDecayDamage(DecayEntity)": {
    "prefix": "OnDecayDamage",
    "body": "void OnDecayDamage(DecayEntity param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DecayEntity param1"
  },
  "OnActiveItemChange(BasePlayer,Item,ItemId)": {
    "prefix": "OnActiveItemChange",
    "body": "void OnActiveItemChange(BasePlayer param1, Item param2, ItemId param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Item param2, ItemId param3"
  },
  "OnOvenStarted(BaseOven)": {
    "prefix": "OnOvenStarted",
    "body": "void OnOvenStarted(BaseOven param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseOven param1"
  },
  "OnSupplyDropLanded(SupplyDrop)": {
    "prefix": "OnSupplyDropLanded",
    "body": "void OnSupplyDropLanded(SupplyDrop param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SupplyDrop param1"
  },
  "OnSignalBroadcast(BaseEntity,Network.Connection)": {
    "prefix": "OnSignalBroadcast",
    "body": "void OnSignalBroadcast(BaseEntity param1, Network.Connection param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, Network.Connection param2"
  },
  "OnOvenCooked(BaseOven,Item,BaseEntity)": {
    "prefix": "OnOvenCooked",
    "body": "void OnOvenCooked(BaseOven param1, Item param2, BaseEntity param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseOven param1, Item param2, BaseEntity param3"
  },
  "OnConstructionPlace(BaseEntity,Construction,Construction.Target,BasePlayer)": {
    "prefix": "OnConstructionPlace",
    "body": "void OnConstructionPlace(BaseEntity param1, Construction param2, Construction.Target param3, BasePlayer param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, Construction param2, Construction.Target param3, BasePlayer param4"
  },
  "OnGrowableStateChange(GrowableEntity,PlantProperties.State)": {
    "prefix": "OnGrowableStateChange",
    "body": "void OnGrowableStateChange(GrowableEntity param1, PlantProperties.State param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters GrowableEntity param1, PlantProperties.State param2"
  },
  "OnLootEntityEnd(BasePlayer,ContainerIOEntity)": {
    "prefix": "OnLootEntityEnd",
    "body": "void OnLootEntityEnd(BasePlayer param1, ContainerIOEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ContainerIOEntity param2"
  },
  "CanBeTargeted(BaseCombatEntity,HelicopterTurret)": {
    "prefix": "CanBeTargeted",
    "body": "void CanBeTargeted(BaseCombatEntity param1, HelicopterTurret param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseCombatEntity param1, HelicopterTurret param2"
  },
  "OnRackedWeaponLoad(Item,ItemDefinition,BasePlayer,WeaponRack)": {
    "prefix": "OnRackedWeaponLoad",
    "body": "void OnRackedWeaponLoad(Item param1, ItemDefinition param2, BasePlayer param3, WeaponRack param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, ItemDefinition param2, BasePlayer param3, WeaponRack param4"
  },
  "OnTeamUpdated(ulong,ProtoBuf.PlayerTeam,BasePlayer)": {
    "prefix": "OnTeamUpdated",
    "body": "void OnTeamUpdated(ulong param1, ProtoBuf.PlayerTeam param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ulong param1, ProtoBuf.PlayerTeam param2, BasePlayer param3"
  },
  "OnRconConnection(System.Net.IPAddress)": {
    "prefix": "OnRconConnection",
    "body": "void OnRconConnection(System.Net.IPAddress param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters System.Net.IPAddress param1"
  },
  "OnEntityTakeDamage(ResourceEntity,HitInfo)": {
    "prefix": "OnEntityTakeDamage",
    "body": "void OnEntityTakeDamage(ResourceEntity param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ResourceEntity param1, HitInfo param2"
  },
  "OnOutputUpdate(IOEntity)": {
    "prefix": "OnOutputUpdate",
    "body": "void OnOutputUpdate(IOEntity param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IOEntity param1"
  },
  "OnExcavatorResourceSet(ExcavatorArm,string,BasePlayer)": {
    "prefix": "OnExcavatorResourceSet",
    "body": "void OnExcavatorResourceSet(ExcavatorArm param1, string param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ExcavatorArm param1, string param2, BasePlayer param3"
  },
  "OnPlayerPveDamage(BaseEntity,HitInfo,BuildingBlock)": {
    "prefix": "OnPlayerPveDamage",
    "body": "void OnPlayerPveDamage(BaseEntity param1, HitInfo param2, BuildingBlock param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, HitInfo param2, BuildingBlock param3"
  },
  "OnMixingTableToggle(MixingTable,BasePlayer)": {
    "prefix": "OnMixingTableToggle",
    "body": "void OnMixingTableToggle(MixingTable param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MixingTable param1, BasePlayer param2"
  },
  "OnContainerDropItems(ItemContainer)": {
    "prefix": "OnContainerDropItems",
    "body": "void OnContainerDropItems(ItemContainer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemContainer param1"
  },
  "OnGrowableGathered(GrowableEntity,Item,BasePlayer)": {
    "prefix": "OnGrowableGathered",
    "body": "void OnGrowableGathered(GrowableEntity param1, Item param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters GrowableEntity param1, Item param2, BasePlayer param3"
  },
  "OnItemDeployed(Deployer,BaseEntity,BaseEntity)": {
    "prefix": "OnItemDeployed",
    "body": "void OnItemDeployed(Deployer param1, BaseEntity param2, BaseEntity param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Deployer param1, BaseEntity param2, BaseEntity param3"
  },
  "OnStructureUpgrade(BuildingBlock,BasePlayer,BuildingGrade.Enum,ulong)": {
    "prefix": "OnStructureUpgrade",
    "body": "void OnStructureUpgrade(BuildingBlock param1, BasePlayer param2, BuildingGrade.Enum param3, ulong param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingBlock param1, BasePlayer param2, BuildingGrade.Enum param3, ulong param4"
  },
  "CanUseMailbox(BasePlayer,Mailbox)": {
    "prefix": "CanUseMailbox",
    "body": "void CanUseMailbox(BasePlayer param1, Mailbox param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Mailbox param2"
  },
  "OnRotateVendingMachine(VendingMachine,BasePlayer)": {
    "prefix": "OnRotateVendingMachine",
    "body": "void OnRotateVendingMachine(VendingMachine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, BasePlayer param2"
  },
  "OnLootEntityEnd(BasePlayer,LootableCorpse)": {
    "prefix": "OnLootEntityEnd",
    "body": "void OnLootEntityEnd(BasePlayer param1, LootableCorpse param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, LootableCorpse param2"
  },
  "OnTrapDisarm(Landmine,BasePlayer)": {
    "prefix": "OnTrapDisarm",
    "body": "void OnTrapDisarm(Landmine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Landmine param1, BasePlayer param2"
  },
  "OnTurretRotate(AutoTurret,BasePlayer)": {
    "prefix": "OnTurretRotate",
    "body": "void OnTurretRotate(AutoTurret param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, BasePlayer param2"
  },
  "OnBookmarkControlEnded(ComputerStation,BasePlayer,IRemoteControllable)": {
    "prefix": "OnBookmarkControlEnded",
    "body": "void OnBookmarkControlEnded(ComputerStation param1, BasePlayer param2, IRemoteControllable param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ComputerStation param1, BasePlayer param2, IRemoteControllable param3"
  },
  "CanUseGesture(BasePlayer,GestureConfig)": {
    "prefix": "CanUseGesture",
    "body": "void CanUseGesture(BasePlayer param1, GestureConfig param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, GestureConfig param2"
  },
  "OnClientDisconnect(Network.Connection,string)": {
    "prefix": "OnClientDisconnect",
    "body": "void OnClientDisconnect(Network.Connection param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1, string param2"
  },
  "OnEntityMarkHostile(BaseCombatEntity,float)": {
    "prefix": "OnEntityMarkHostile",
    "body": "void OnEntityMarkHostile(BaseCombatEntity param1, float param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseCombatEntity param1, float param2"
  },
  "OnSprayRemove(SprayCanSpray,BasePlayer)": {
    "prefix": "OnSprayRemove",
    "body": "void OnSprayRemove(SprayCanSpray param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SprayCanSpray param1, BasePlayer param2"
  },
  "OnServerRestartInterrupt()": {
    "prefix": "OnServerRestartInterrupt",
    "body": "void OnServerRestartInterrupt()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "OnPlayerRevive(BasePlayer,BasePlayer)": {
    "prefix": "OnPlayerRevive",
    "body": "void OnPlayerRevive(BasePlayer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer param2"
  },
  "OnPlayerKicked(Network.Connection,string)": {
    "prefix": "OnPlayerKicked",
    "body": "void OnPlayerKicked(Network.Connection param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1, string param2"
  },
  "OnNpcRadioChatter(ScientistNPC)": {
    "prefix": "OnNpcRadioChatter",
    "body": "void OnNpcRadioChatter(ScientistNPC param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ScientistNPC param1"
  },
  "OnSwitchToggle(ElectricSwitch,BasePlayer)": {
    "prefix": "OnSwitchToggle",
    "body": "void OnSwitchToggle(ElectricSwitch param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ElectricSwitch param1, BasePlayer param2"
  },
  "OnSwitchToggled(IndustrialConveyor,BasePlayer)": {
    "prefix": "OnSwitchToggled",
    "body": "void OnSwitchToggled(IndustrialConveyor param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IndustrialConveyor param1, BasePlayer param2"
  },
  "OnExplosiveDropped(BasePlayer,BaseEntity,ThrownWeapon)": {
    "prefix": "OnExplosiveDropped",
    "body": "void OnExplosiveDropped(BasePlayer param1, BaseEntity param2, ThrownWeapon param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseEntity param2, ThrownWeapon param3"
  },
  "OnTechTreeNodeUnlocked(Workbench,TechTreeData.NodeInstance,BasePlayer)": {
    "prefix": "OnTechTreeNodeUnlocked",
    "body": "void OnTechTreeNodeUnlocked(Workbench param1, TechTreeData.NodeInstance param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Workbench param1, TechTreeData.NodeInstance param2, BasePlayer param3"
  },
  "OnAmmoUnload(BaseProjectile,Item,BasePlayer)": {
    "prefix": "OnAmmoUnload",
    "body": "void OnAmmoUnload(BaseProjectile param1, Item param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseProjectile param1, Item param2, BasePlayer param3"
  },
  "OnCardSwipe(CardReader,Keycard,BasePlayer)": {
    "prefix": "OnCardSwipe",
    "body": "void OnCardSwipe(CardReader param1, Keycard param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CardReader param1, Keycard param2, BasePlayer param3"
  },
  "OnPlayerRecovered(BasePlayer)": {
    "prefix": "OnPlayerRecovered",
    "body": "void OnPlayerRecovered(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnLiquidWeaponFired(LiquidWeapon,BasePlayer)": {
    "prefix": "OnLiquidWeaponFired",
    "body": "void OnLiquidWeaponFired(LiquidWeapon param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters LiquidWeapon param1, BasePlayer param2"
  },
  "OnNetworkGroupEntered(BaseNetworkable,Network.Visibility.Group)": {
    "prefix": "OnNetworkGroupEntered",
    "body": "void OnNetworkGroupEntered(BaseNetworkable param1, Network.Visibility.Group param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNetworkable param1, Network.Visibility.Group param2"
  },
  "CanPickupLock(BasePlayer,BaseLock)": {
    "prefix": "CanPickupLock",
    "body": "void CanPickupLock(BasePlayer param1, BaseLock param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseLock param2"
  },
  "CanStackItem(Item,Item)": {
    "prefix": "CanStackItem",
    "body": "void CanStackItem(Item param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, Item param2"
  },
  "OnDieselEngineToggled(DieselEngine)": {
    "prefix": "OnDieselEngineToggled",
    "body": "void OnDieselEngineToggled(DieselEngine param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DieselEngine param1"
  },
  "OnPhoneDial(PhoneController,PhoneController,BasePlayer)": {
    "prefix": "OnPhoneDial",
    "body": "void OnPhoneDial(PhoneController param1, PhoneController param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, PhoneController param2, BasePlayer param3"
  },
  "OnInventoryItemsTake(PlayerInventory,System.Collections.Generic.List<Item>,int,int)": {
    "prefix": "OnInventoryItemsTake",
    "body": "void OnInventoryItemsTake(PlayerInventory param1, System.Collections.Generic.List<Item> param2, int param3, int param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, System.Collections.Generic.List<Item> param2, int param3, int param4"
  },
  "OnLootEntityEnd(BasePlayer,DroppedItemContainer)": {
    "prefix": "OnLootEntityEnd",
    "body": "void OnLootEntityEnd(BasePlayer param1, DroppedItemContainer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, DroppedItemContainer param2"
  },
  "OnCargoShipHarborApproach(CargoShip,CargoNotifier)": {
    "prefix": "OnCargoShipHarborApproach",
    "body": "void OnCargoShipHarborApproach(CargoShip param1, CargoNotifier param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CargoShip param1, CargoNotifier param2"
  },
  "CanCombineDroppedItem(DroppedItem,DroppedItem)": {
    "prefix": "CanCombineDroppedItem",
    "body": "void CanCombineDroppedItem(DroppedItem param1, DroppedItem param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DroppedItem param1, DroppedItem param2"
  },
  "OnDefaultItemsReceived(PlayerInventory)": {
    "prefix": "OnDefaultItemsReceived",
    "body": "void OnDefaultItemsReceived(PlayerInventory param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1"
  },
  "OnMetalDetectorFlagRequest(BaseMetalDetector,UnityEngine.Vector3,BasePlayer)": {
    "prefix": "OnMetalDetectorFlagRequest",
    "body": "void OnMetalDetectorFlagRequest(BaseMetalDetector param1, UnityEngine.Vector3 param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseMetalDetector param1, UnityEngine.Vector3 param2, BasePlayer param3"
  },
  "OnEntityLeave(TriggerComfort,BaseEntity)": {
    "prefix": "OnEntityLeave",
    "body": "void OnEntityLeave(TriggerComfort param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TriggerComfort param1, BaseEntity param2"
  },
  "CanBeHomingTargeted(PatrolHelicopter)": {
    "prefix": "CanBeHomingTargeted",
    "body": "void CanBeHomingTargeted(PatrolHelicopter param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatrolHelicopter param1"
  },
  "OnBradleyApcPatrol(BradleyAPC)": {
    "prefix": "OnBradleyApcPatrol",
    "body": "void OnBradleyApcPatrol(BradleyAPC param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BradleyAPC param1"
  },
  "OnSwitchToggle(FuelGenerator,BasePlayer)": {
    "prefix": "OnSwitchToggle",
    "body": "void OnSwitchToggle(FuelGenerator param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters FuelGenerator param1, BasePlayer param2"
  },
  "OnAdventGiftAwarded(AdventCalendar,BasePlayer)": {
    "prefix": "OnAdventGiftAwarded",
    "body": "void OnAdventGiftAwarded(AdventCalendar param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AdventCalendar param1, BasePlayer param2"
  },
  "OnPlayerSleepEnded(BasePlayer)": {
    "prefix": "OnPlayerSleepEnded",
    "body": "void OnPlayerSleepEnded(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnAmmoSwitch(BaseProjectile,BasePlayer,ItemDefinition)": {
    "prefix": "OnAmmoSwitch",
    "body": "void OnAmmoSwitch(BaseProjectile param1, BasePlayer param2, ItemDefinition param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseProjectile param1, BasePlayer param2, ItemDefinition param3"
  },
  "OnInterferenceOthersUpdate(AutoTurret)": {
    "prefix": "OnInterferenceOthersUpdate",
    "body": "void OnInterferenceOthersUpdate(AutoTurret param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1"
  },
  "OnEntityDeath(ResourceEntity,HitInfo)": {
    "prefix": "OnEntityDeath",
    "body": "void OnEntityDeath(ResourceEntity param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ResourceEntity param1, HitInfo param2"
  },
  "OnVehicleLockRequest(ModularCarGarage,BasePlayer,string)": {
    "prefix": "OnVehicleLockRequest",
    "body": "void OnVehicleLockRequest(ModularCarGarage param1, BasePlayer param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ModularCarGarage param1, BasePlayer param2, string param3"
  },
  "OnFireworkExhausted(BaseFirework)": {
    "prefix": "OnFireworkExhausted",
    "body": "void OnFireworkExhausted(BaseFirework param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseFirework param1"
  },
  "OnServerInformationUpdated()": {
    "prefix": "OnServerInformationUpdated",
    "body": "void OnServerInformationUpdated()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "OnQuarryGather(MiningQuarry,Item)": {
    "prefix": "OnQuarryGather",
    "body": "void OnQuarryGather(MiningQuarry param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MiningQuarry param1, Item param2"
  },
  "OnPlayerViolation(BasePlayer,AntiHackType,float)": {
    "prefix": "OnPlayerViolation",
    "body": "void OnPlayerViolation(BasePlayer param1, AntiHackType param2, float param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, AntiHackType param2, float param3"
  },
  "OnVehicleModuleSelect(Item,ModularCarGarage,BasePlayer)": {
    "prefix": "OnVehicleModuleSelect",
    "body": "void OnVehicleModuleSelect(Item param1, ModularCarGarage param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, ModularCarGarage param2, BasePlayer param3"
  },
  "OnRackedWeaponTaken(Item,BasePlayer,WeaponRack)": {
    "prefix": "OnRackedWeaponTaken",
    "body": "void OnRackedWeaponTaken(Item param1, BasePlayer param2, WeaponRack param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2, WeaponRack param3"
  },
  "CanAffordUpgrade(BasePlayer,BuildingBlock,BuildingGrade.Enum,ulong)": {
    "prefix": "CanAffordUpgrade",
    "body": "void CanAffordUpgrade(BasePlayer param1, BuildingBlock param2, BuildingGrade.Enum param3, ulong param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BuildingBlock param2, BuildingGrade.Enum param3, ulong param4"
  },
  "OnQuarryToggled(MiningQuarry,BasePlayer)": {
    "prefix": "OnQuarryToggled",
    "body": "void OnQuarryToggled(MiningQuarry param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MiningQuarry param1, BasePlayer param2"
  },
  "OnRfBroadcasterRemove(IRFObject,int)": {
    "prefix": "OnRfBroadcasterRemove",
    "body": "void OnRfBroadcasterRemove(IRFObject param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IRFObject param1, int param2"
  },
  "CanLootEntity(BasePlayer,ContainerIOEntity)": {
    "prefix": "CanLootEntity",
    "body": "void CanLootEntity(BasePlayer param1, ContainerIOEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ContainerIOEntity param2"
  },
  "OnEntityFromOwnerCheck(BaseEntity,BasePlayer,uint,string)": {
    "prefix": "OnEntityFromOwnerCheck",
    "body": "void OnEntityFromOwnerCheck(BaseEntity param1, BasePlayer param2, uint param3, string param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, BasePlayer param2, uint param3, string param4"
  },
  "OnCupboardAuthorize(BuildingPrivlidge,BasePlayer)": {
    "prefix": "OnCupboardAuthorize",
    "body": "void OnCupboardAuthorize(BuildingPrivlidge param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingPrivlidge param1, BasePlayer param2"
  },
  "OnEntityMarkHostile(BasePlayer,float)": {
    "prefix": "OnEntityMarkHostile",
    "body": "void OnEntityMarkHostile(BasePlayer param1, float param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, float param2"
  },
  "OnArcadeScoreAdded(BaseArcadeMachine,BasePlayer,int)": {
    "prefix": "OnArcadeScoreAdded",
    "body": "void OnArcadeScoreAdded(BaseArcadeMachine param1, BasePlayer param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseArcadeMachine param1, BasePlayer param2, int param3"
  },
  "OnMagazineReload(BaseProjectile,IAmmoContainer,BasePlayer)": {
    "prefix": "OnMagazineReload",
    "body": "void OnMagazineReload(BaseProjectile param1, IAmmoContainer param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseProjectile param1, IAmmoContainer param2, BasePlayer param3"
  },
  "OnSendModelState(BasePlayer)": {
    "prefix": "OnSendModelState",
    "body": "void OnSendModelState(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnFireworkDesignChange(PatternFirework,ProtoBuf.PatternFirework.Design,BasePlayer)": {
    "prefix": "OnFireworkDesignChange",
    "body": "void OnFireworkDesignChange(PatternFirework param1, ProtoBuf.PatternFirework.Design param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatternFirework param1, ProtoBuf.PatternFirework.Design param2, BasePlayer param3"
  },
  "OnDoorOpened(Door,BasePlayer)": {
    "prefix": "OnDoorOpened",
    "body": "void OnDoorOpened(Door param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Door param1, BasePlayer param2"
  },
  "CanVendingAcceptItem(VendingMachine,Item,int)": {
    "prefix": "CanVendingAcceptItem",
    "body": "void CanVendingAcceptItem(VendingMachine param1, Item param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, Item param2, int param3"
  },
  "OnItemAddedToContainer(ItemContainer,Item)": {
    "prefix": "OnItemAddedToContainer",
    "body": "void OnItemAddedToContainer(ItemContainer param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemContainer param1, Item param2"
  },
  "OnFeedbackReported(BasePlayer,string,string,Facepunch.Models.ReportType)": {
    "prefix": "OnFeedbackReported",
    "body": "void OnFeedbackReported(BasePlayer param1, string param2, string param3, Facepunch.Models.ReportType param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2, string param3, Facepunch.Models.ReportType param4"
  },
  "OnQueueCycle(int)": {
    "prefix": "OnQueueCycle",
    "body": "void OnQueueCycle(int param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters int param1"
  },
  "CanMoveItem(Item,PlayerInventory,ItemContainerId,int,int,ItemMoveModifier)": {
    "prefix": "CanMoveItem",
    "body": "void CanMoveItem(Item param1, PlayerInventory param2, ItemContainerId param3, int param4, int param5, ItemMoveModifier param6)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, PlayerInventory param2, ItemContainerId param3, int param4, int param5, ItemMoveModifier param6"
  },
  "OnBuildingMerge(ServerBuildingManager,BuildingManager.Building,BuildingManager.Building)": {
    "prefix": "OnBuildingMerge",
    "body": "void OnBuildingMerge(ServerBuildingManager param1, BuildingManager.Building param2, BuildingManager.Building param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ServerBuildingManager param1, BuildingManager.Building param2, BuildingManager.Building param3"
  },
  "CanLock(BasePlayer,CodeLock)": {
    "prefix": "CanLock",
    "body": "void CanLock(BasePlayer param1, CodeLock param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, CodeLock param2"
  },
  "OnSolarPanelSunUpdate(SolarPanel,int)": {
    "prefix": "OnSolarPanelSunUpdate",
    "body": "void OnSolarPanelSunUpdate(SolarPanel param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SolarPanel param1, int param2"
  },
  "OnCrateDropped(HackableLockedCrate)": {
    "prefix": "OnCrateDropped",
    "body": "void OnCrateDropped(HackableLockedCrate param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HackableLockedCrate param1"
  },
  "OnConnectionDequeue(Network.Connection)": {
    "prefix": "OnConnectionDequeue",
    "body": "void OnConnectionDequeue(Network.Connection param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1"
  },
  "OnSendCommand(Network.Connection,string,object[])": {
    "prefix": "OnSendCommand",
    "body": "void OnSendCommand(Network.Connection param1, string param2, object[] param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1, string param2, object[] param3"
  },
  "OnLootNetworkUpdate(PlayerLoot)": {
    "prefix": "OnLootNetworkUpdate",
    "body": "void OnLootNetworkUpdate(PlayerLoot param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerLoot param1"
  },
  "CanUnlockTechTreeNode(BasePlayer,TechTreeData.NodeInstance,TechTreeData)": {
    "prefix": "CanUnlockTechTreeNode",
    "body": "void CanUnlockTechTreeNode(BasePlayer param1, TechTreeData.NodeInstance param2, TechTreeData param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, TechTreeData.NodeInstance param2, TechTreeData param3"
  },
  "CanBeTargeted(BaseCombatEntity,AutoTurret)": {
    "prefix": "CanBeTargeted",
    "body": "void CanBeTargeted(BaseCombatEntity param1, AutoTurret param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseCombatEntity param1, AutoTurret param2"
  },
  "OnCollectiblePickup(CollectibleEntity,BasePlayer,bool)": {
    "prefix": "OnCollectiblePickup",
    "body": "void OnCollectiblePickup(CollectibleEntity param1, BasePlayer param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CollectibleEntity param1, BasePlayer param2, bool param3"
  },
  "OnBoomboxStationUpdate(BoomBox,string,BasePlayer)": {
    "prefix": "OnBoomboxStationUpdate",
    "body": "void OnBoomboxStationUpdate(BoomBox param1, string param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BoomBox param1, string param2, BasePlayer param3"
  },
  "OnDispenserBonusReceived(ResourceDispenser,BasePlayer,Item)": {
    "prefix": "OnDispenserBonusReceived",
    "body": "void OnDispenserBonusReceived(ResourceDispenser param1, BasePlayer param2, Item param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ResourceDispenser param1, BasePlayer param2, Item param3"
  },
  "IOnBasePlayerAttacked(BasePlayer,HitInfo)": {
    "prefix": "IOnBasePlayerAttacked",
    "body": "void IOnBasePlayerAttacked(BasePlayer param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HitInfo param2"
  },
  "OnMlrsFire(MLRS,BasePlayer)": {
    "prefix": "OnMlrsFire",
    "body": "void OnMlrsFire(MLRS param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MLRS param1, BasePlayer param2"
  },
  "OnFlameThrowerBurn(FlameThrower,BaseEntity)": {
    "prefix": "OnFlameThrowerBurn",
    "body": "void OnFlameThrowerBurn(FlameThrower param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters FlameThrower param1, BaseEntity param2"
  },
  "OnPlayerPingsSend(BasePlayer,ProtoBuf.MapNoteList)": {
    "prefix": "OnPlayerPingsSend",
    "body": "void OnPlayerPingsSend(BasePlayer param1, ProtoBuf.MapNoteList param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ProtoBuf.MapNoteList param2"
  },
  "OnTimedExplosiveExplode(TimedExplosive,UnityEngine.Vector3)": {
    "prefix": "OnTimedExplosiveExplode",
    "body": "void OnTimedExplosiveExplode(TimedExplosive param1, UnityEngine.Vector3 param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TimedExplosive param1, UnityEngine.Vector3 param2"
  },
  "CanLootEntity(BasePlayer,LootableCorpse)": {
    "prefix": "CanLootEntity",
    "body": "void CanLootEntity(BasePlayer param1, LootableCorpse param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, LootableCorpse param2"
  },
  "OnTeamUpdate(ulong,ulong,BasePlayer)": {
    "prefix": "OnTeamUpdate",
    "body": "void OnTeamUpdate(ulong param1, ulong param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ulong param1, ulong param2, BasePlayer param3"
  },
  "IOnPlayerConnected(BasePlayer)": {
    "prefix": "IOnPlayerConnected",
    "body": "void IOnPlayerConnected(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnMaxStackable(Item)": {
    "prefix": "OnMaxStackable",
    "body": "void OnMaxStackable(Item param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1"
  },
  "OnFireworkDesignChanged(PatternFirework,ProtoBuf.PatternFirework.Design,BasePlayer)": {
    "prefix": "OnFireworkDesignChanged",
    "body": "void OnFireworkDesignChanged(PatternFirework param1, ProtoBuf.PatternFirework.Design param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatternFirework param1, ProtoBuf.PatternFirework.Design param2, BasePlayer param3"
  },
  "OnVendingShopOpen(InvisibleVendingMachine,BasePlayer)": {
    "prefix": "OnVendingShopOpen",
    "body": "void OnVendingShopOpen(InvisibleVendingMachine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters InvisibleVendingMachine param1, BasePlayer param2"
  },
  "OnDemoRecordingStarted(string,BasePlayer)": {
    "prefix": "OnDemoRecordingStarted",
    "body": "void OnDemoRecordingStarted(string param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, BasePlayer param2"
  },
  "OnHealingItemUse(MedicalTool,BasePlayer)": {
    "prefix": "OnHealingItemUse",
    "body": "void OnHealingItemUse(MedicalTool param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MedicalTool param1, BasePlayer param2"
  },
  "OnSleepingBagDestroy(SleepingBag,ulong)": {
    "prefix": "OnSleepingBagDestroy",
    "body": "void OnSleepingBagDestroy(SleepingBag param1, ulong param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SleepingBag param1, ulong param2"
  },
  "OnBoatPathGenerate()": {
    "prefix": "OnBoatPathGenerate",
    "body": "void OnBoatPathGenerate()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "CanUseWires(BasePlayer)": {
    "prefix": "CanUseWires",
    "body": "void CanUseWires(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnRackedWeaponUnload(Item,BasePlayer,WeaponRack)": {
    "prefix": "OnRackedWeaponUnload",
    "body": "void OnRackedWeaponUnload(Item param1, BasePlayer param2, WeaponRack param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2, WeaponRack param3"
  },
  "OnExcavatorSuppliesRequested(ExcavatorSignalComputer,BasePlayer,BaseEntity)": {
    "prefix": "OnExcavatorSuppliesRequested",
    "body": "void OnExcavatorSuppliesRequested(ExcavatorSignalComputer param1, BasePlayer param2, BaseEntity param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ExcavatorSignalComputer param1, BasePlayer param2, BaseEntity param3"
  },
  "OnRfListenerRemoved(IRFObject,int)": {
    "prefix": "OnRfListenerRemoved",
    "body": "void OnRfListenerRemoved(IRFObject param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IRFObject param1, int param2"
  },
  "OnServerUserSet(ulong,ServerUsers.UserGroup,string,string,long)": {
    "prefix": "OnServerUserSet",
    "body": "void OnServerUserSet(ulong param1, ServerUsers.UserGroup param2, string param3, string param4, long param5)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ulong param1, ServerUsers.UserGroup param2, string param3, string param4, long param5"
  },
  "OnRfBroadcasterRemoved(IRFObject,int)": {
    "prefix": "OnRfBroadcasterRemoved",
    "body": "void OnRfBroadcasterRemoved(IRFObject param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IRFObject param1, int param2"
  },
  "OnEntityEnter(TriggerBase,BaseEntity)": {
    "prefix": "OnEntityEnter",
    "body": "void OnEntityEnter(TriggerBase param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TriggerBase param1, BaseEntity param2"
  },
  "OnTurretAuthorize(AutoTurret,BasePlayer)": {
    "prefix": "OnTurretAuthorize",
    "body": "void OnTurretAuthorize(AutoTurret param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, BasePlayer param2"
  },
  "OnEntityKill(BaseNetworkable)": {
    "prefix": "OnEntityKill",
    "body": "void OnEntityKill(BaseNetworkable param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNetworkable param1"
  },
  "OnClothingItemChanged(PlayerInventory,Item,bool)": {
    "prefix": "OnClothingItemChanged",
    "body": "void OnClothingItemChanged(PlayerInventory param1, Item param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, Item param2, bool param3"
  },
  "OnButtonPress(PressButton,BasePlayer)": {
    "prefix": "OnButtonPress",
    "body": "void OnButtonPress(PressButton param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PressButton param1, BasePlayer param2"
  },
  "CanCatchFish(BasePlayer,BaseFishingRod,Item)": {
    "prefix": "CanCatchFish",
    "body": "void CanCatchFish(BasePlayer param1, BaseFishingRod param2, Item param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseFishingRod param2, Item param3"
  },
  "OnPhoneNameUpdate(PhoneController,string,BasePlayer)": {
    "prefix": "OnPhoneNameUpdate",
    "body": "void OnPhoneNameUpdate(PhoneController param1, string param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, string param2, BasePlayer param3"
  },
  "CanLootEntity(BasePlayer,DroppedItemContainer)": {
    "prefix": "CanLootEntity",
    "body": "void CanLootEntity(BasePlayer param1, DroppedItemContainer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, DroppedItemContainer param2"
  },
  "OnCargoShipHarborLeave(CargoShip)": {
    "prefix": "OnCargoShipHarborLeave",
    "body": "void OnCargoShipHarborLeave(CargoShip param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CargoShip param1"
  },
  "OnXmasStockingFill(Stocking)": {
    "prefix": "OnXmasStockingFill",
    "body": "void OnXmasStockingFill(Stocking param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Stocking param1"
  },
  "CanNetworkTo(BaseNetworkable,BasePlayer)": {
    "prefix": "CanNetworkTo",
    "body": "void CanNetworkTo(BaseNetworkable param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNetworkable param1, BasePlayer param2"
  },
  "OnRecyclerToggle(Recycler,BasePlayer)": {
    "prefix": "OnRecyclerToggle",
    "body": "void OnRecyclerToggle(Recycler param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Recycler param1, BasePlayer param2"
  },
  "OnThreatLevelUpdate(BasePlayer)": {
    "prefix": "OnThreatLevelUpdate",
    "body": "void OnThreatLevelUpdate(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "CanBeHomingTargeted(BaseHelicopter)": {
    "prefix": "CanBeHomingTargeted",
    "body": "void CanBeHomingTargeted(BaseHelicopter param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseHelicopter param1"
  },
  "CanEntityBeHostile(BaseCombatEntity)": {
    "prefix": "CanEntityBeHostile",
    "body": "void CanEntityBeHostile(BaseCombatEntity param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseCombatEntity param1"
  },
  "OnPlayerStudyBlueprint(BasePlayer,Item)": {
    "prefix": "OnPlayerStudyBlueprint",
    "body": "void OnPlayerStudyBlueprint(BasePlayer param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Item param2"
  },
  "OnDigitalClockAlarmsSet(DigitalClock,ProtoBuf.DigitalClockMessage)": {
    "prefix": "OnDigitalClockAlarmsSet",
    "body": "void OnDigitalClockAlarmsSet(DigitalClock param1, ProtoBuf.DigitalClockMessage param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DigitalClock param1, ProtoBuf.DigitalClockMessage param2"
  },
  "OnSensorDetect(HBHFSensor,BasePlayer)": {
    "prefix": "OnSensorDetect",
    "body": "void OnSensorDetect(HBHFSensor param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HBHFSensor param1, BasePlayer param2"
  },
  "OnEntityControl(RemoteControlEntity,ulong)": {
    "prefix": "OnEntityControl",
    "body": "void OnEntityControl(RemoteControlEntity param1, ulong param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RemoteControlEntity param1, ulong param2"
  },
  "OnWallpaperRemove(BuildingBlock,int)": {
    "prefix": "OnWallpaperRemove",
    "body": "void OnWallpaperRemove(BuildingBlock param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingBlock param1, int param2"
  },
  "OnAIBrainStateSwitched(BaseAIBrain,BaseAIBrain.BasicAIState)": {
    "prefix": "OnAIBrainStateSwitched",
    "body": "void OnAIBrainStateSwitched(BaseAIBrain param1, BaseAIBrain.BasicAIState param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseAIBrain param1, BaseAIBrain.BasicAIState param2"
  },
  "OnOvenCook(BaseOven,Item)": {
    "prefix": "OnOvenCook",
    "body": "void OnOvenCook(BaseOven param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseOven param1, Item param2"
  },
  "OnVendingShopOpened(InvisibleVendingMachine,BasePlayer)": {
    "prefix": "OnVendingShopOpened",
    "body": "void OnVendingShopOpened(InvisibleVendingMachine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters InvisibleVendingMachine param1, BasePlayer param2"
  },
  "OnPatrolHelicopterTakeDamage(PatrolHelicopter,HitInfo)": {
    "prefix": "OnPatrolHelicopterTakeDamage",
    "body": "void OnPatrolHelicopterTakeDamage(PatrolHelicopter param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatrolHelicopter param1, HitInfo param2"
  },
  "OnCodeChange(ModularCar,BasePlayer,string)": {
    "prefix": "OnCodeChange",
    "body": "void OnCodeChange(ModularCar param1, BasePlayer param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ModularCar param1, BasePlayer param2, string param3"
  },
  "CanHelicopterStrafe(PatrolHelicopterAI)": {
    "prefix": "CanHelicopterStrafe",
    "body": "void CanHelicopterStrafe(PatrolHelicopterAI param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatrolHelicopterAI param1"
  },
  "OnWindmillUpdate(ElectricWindmill)": {
    "prefix": "OnWindmillUpdate",
    "body": "void OnWindmillUpdate(ElectricWindmill param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ElectricWindmill param1"
  },
  "OnHelicopterDropCrate(CH47HelicopterAIController)": {
    "prefix": "OnHelicopterDropCrate",
    "body": "void OnHelicopterDropCrate(CH47HelicopterAIController param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CH47HelicopterAIController param1"
  },
  "OnItemResearch(ResearchTable,Item,BasePlayer)": {
    "prefix": "OnItemResearch",
    "body": "void OnItemResearch(ResearchTable param1, Item param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ResearchTable param1, Item param2, BasePlayer param3"
  },
  "OnCargoShipEgress(CargoShip)": {
    "prefix": "OnCargoShipEgress",
    "body": "void OnCargoShipEgress(CargoShip param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CargoShip param1"
  },
  "CanBeTargeted(BasePlayer,GunTrap)": {
    "prefix": "CanBeTargeted",
    "body": "void CanBeTargeted(BasePlayer param1, GunTrap param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, GunTrap param2"
  },
  "CanSamSiteShoot(SamSite)": {
    "prefix": "CanSamSiteShoot",
    "body": "void CanSamSiteShoot(SamSite param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SamSite param1"
  },
  "OnNpcTarget(BaseEntity,BaseEntity)": {
    "prefix": "OnNpcTarget",
    "body": "void OnNpcTarget(BaseEntity param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, BaseEntity param2"
  },
  "OnDoorKnocked(Door,BasePlayer)": {
    "prefix": "OnDoorKnocked",
    "body": "void OnDoorKnocked(Door param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Door param1, BasePlayer param2"
  },
  "OnDispenserGathered(ResourceDispenser,BasePlayer,Item)": {
    "prefix": "OnDispenserGathered",
    "body": "void OnDispenserGathered(ResourceDispenser param1, BasePlayer param2, Item param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ResourceDispenser param1, BasePlayer param2, Item param3"
  },
  "CanBypassQueue(Network.Connection)": {
    "prefix": "CanBypassQueue",
    "body": "void CanBypassQueue(Network.Connection param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1"
  },
  "OnNpcConversationRespond(NPCTalking,BasePlayer,ConversationData,ConversationData.ResponseNode)": {
    "prefix": "OnNpcConversationRespond",
    "body": "void OnNpcConversationRespond(NPCTalking param1, BasePlayer param2, ConversationData param3, ConversationData.ResponseNode param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NPCTalking param1, BasePlayer param2, ConversationData param3, ConversationData.ResponseNode param4"
  },
  "OnRfFrequencyChange(PagerEntity,int,BasePlayer)": {
    "prefix": "OnRfFrequencyChange",
    "body": "void OnRfFrequencyChange(PagerEntity param1, int param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PagerEntity param1, int param2, BasePlayer param3"
  },
  "OnCrateLaptopAttack(HackableLockedCrate,HitInfo)": {
    "prefix": "OnCrateLaptopAttack",
    "body": "void OnCrateLaptopAttack(HackableLockedCrate param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HackableLockedCrate param1, HitInfo param2"
  },
  "OnFindSpawnPoint(BasePlayer)": {
    "prefix": "OnFindSpawnPoint",
    "body": "void OnFindSpawnPoint(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnEventTrigger(TriggeredEventPrefab)": {
    "prefix": "OnEventTrigger",
    "body": "void OnEventTrigger(TriggeredEventPrefab param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TriggeredEventPrefab param1"
  },
  "OnFuelConsume(BaseOven,Item,ItemModBurnable)": {
    "prefix": "OnFuelConsume",
    "body": "void OnFuelConsume(BaseOven param1, Item param2, ItemModBurnable param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseOven param1, Item param2, ItemModBurnable param3"
  },
  "CanPickupEntity(BasePlayer,BaseCombatEntity)": {
    "prefix": "CanPickupEntity",
    "body": "void CanPickupEntity(BasePlayer param1, BaseCombatEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseCombatEntity param2"
  },
  "OnBuyVendingItem(VendingMachine,BasePlayer,int,int)": {
    "prefix": "OnBuyVendingItem",
    "body": "void OnBuyVendingItem(VendingMachine param1, BasePlayer param2, int param3, int param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, BasePlayer param2, int param3, int param4"
  },
  "OnTurretAssign(AutoTurret,ulong,BasePlayer)": {
    "prefix": "OnTurretAssign",
    "body": "void OnTurretAssign(AutoTurret param1, ulong param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, ulong param2, BasePlayer param3"
  },
  "CanCastFishingRod(BasePlayer,BaseFishingRod,Item,UnityEngine.Vector3)": {
    "prefix": "CanCastFishingRod",
    "body": "void CanCastFishingRod(BasePlayer param1, BaseFishingRod param2, Item param3, UnityEngine.Vector3 param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseFishingRod param2, Item param3, UnityEngine.Vector3 param4"
  },
  "OnVehicleModuleDeselected(ModularCarGarage,BasePlayer)": {
    "prefix": "OnVehicleModuleDeselected",
    "body": "void OnVehicleModuleDeselected(ModularCarGarage param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ModularCarGarage param1, BasePlayer param2"
  },
  "OnFindBurnable(BaseOven)": {
    "prefix": "OnFindBurnable",
    "body": "void OnFindBurnable(BaseOven param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseOven param1"
  },
  "OnPlayerMetabolize(PlayerMetabolism,BaseCombatEntity,float)": {
    "prefix": "OnPlayerMetabolize",
    "body": "void OnPlayerMetabolize(PlayerMetabolism param1, BaseCombatEntity param2, float param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerMetabolism param1, BaseCombatEntity param2, float param3"
  },
  "OnMapMarkersCleared(BasePlayer)": {
    "prefix": "OnMapMarkersCleared",
    "body": "void OnMapMarkersCleared(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnTurretClearList(AutoTurret,BasePlayer)": {
    "prefix": "OnTurretClearList",
    "body": "void OnTurretClearList(AutoTurret param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, BasePlayer param2"
  },
  "OnTeamCreated(BasePlayer,RelationshipManager.PlayerTeam)": {
    "prefix": "OnTeamCreated",
    "body": "void OnTeamCreated(BasePlayer param1, RelationshipManager.PlayerTeam param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, RelationshipManager.PlayerTeam param2"
  },
  "OnItemCraft(ItemCraftTask,BasePlayer,Item)": {
    "prefix": "OnItemCraft",
    "body": "void OnItemCraft(ItemCraftTask param1, BasePlayer param2, Item param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemCraftTask param1, BasePlayer param2, Item param3"
  },
  "OnTerrainInitialized()": {
    "prefix": "OnTerrainInitialized",
    "body": "void OnTerrainInitialized()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "CanPurchaseItem(BasePlayer,Item,System.Action<BasePlayer, Item>,VendingMachine,ItemContainer)": {
    "prefix": "CanPurchaseItem",
    "body": "void CanPurchaseItem(BasePlayer param1, Item param2, System.Action<BasePlayer param3, Item> param4, VendingMachine param5, ItemContainer param6)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Item param2, System.Action<BasePlayer param3, Item> param4, VendingMachine param5, ItemContainer param6"
  },
  "CanDismountEntity(BasePlayer,BaseMountable)": {
    "prefix": "CanDismountEntity",
    "body": "void CanDismountEntity(BasePlayer param1, BaseMountable param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseMountable param2"
  },
  "OnSprinklerSplashed(Sprinkler)": {
    "prefix": "OnSprinklerSplashed",
    "body": "void OnSprinklerSplashed(Sprinkler param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Sprinkler param1"
  },
  "OnBradleyApcInitialize(BradleyAPC)": {
    "prefix": "OnBradleyApcInitialize",
    "body": "void OnBradleyApcInitialize(BradleyAPC param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BradleyAPC param1"
  },
  "CanDeployItem(BasePlayer,Deployer,NetworkableId)": {
    "prefix": "CanDeployItem",
    "body": "void CanDeployItem(BasePlayer param1, Deployer param2, NetworkableId param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Deployer param2, NetworkableId param3"
  },
  "OnMapMarkerAdd(BasePlayer,ProtoBuf.MapNote)": {
    "prefix": "OnMapMarkerAdd",
    "body": "void OnMapMarkerAdd(BasePlayer param1, ProtoBuf.MapNote param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ProtoBuf.MapNote param2"
  },
  "CanMountEntity(BasePlayer,BaseMountable)": {
    "prefix": "CanMountEntity",
    "body": "void CanMountEntity(BasePlayer param1, BaseMountable param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseMountable param2"
  },
  "OnWaterCollect(WaterPump,ItemDefinition)": {
    "prefix": "OnWaterCollect",
    "body": "void OnWaterCollect(WaterPump param1, ItemDefinition param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters WaterPump param1, ItemDefinition param2"
  },
  "OnEngineStarted(MotorRowboat,BasePlayer)": {
    "prefix": "OnEngineStarted",
    "body": "void OnEngineStarted(MotorRowboat param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MotorRowboat param1, BasePlayer param2"
  },
  "CanWaterBallSplash(ItemDefinition,UnityEngine.Vector3,float,int)": {
    "prefix": "CanWaterBallSplash",
    "body": "void CanWaterBallSplash(ItemDefinition param1, UnityEngine.Vector3 param2, float param3, int param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemDefinition param1, UnityEngine.Vector3 param2, float param3, int param4"
  },
  "OnNpcGiveSoldItem(NPCVendingMachine,Item,BasePlayer)": {
    "prefix": "OnNpcGiveSoldItem",
    "body": "void OnNpcGiveSoldItem(NPCVendingMachine param1, Item param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NPCVendingMachine param1, Item param2, BasePlayer param3"
  },
  "OnItemLock(Item)": {
    "prefix": "OnItemLock",
    "body": "void OnItemLock(Item param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1"
  },
  "OnTeamRejectInvite(BasePlayer,RelationshipManager.PlayerTeam)": {
    "prefix": "OnTeamRejectInvite",
    "body": "void OnTeamRejectInvite(BasePlayer param1, RelationshipManager.PlayerTeam param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, RelationshipManager.PlayerTeam param2"
  },
  "OnLiquidWeaponFiringStopped(LiquidWeapon)": {
    "prefix": "OnLiquidWeaponFiringStopped",
    "body": "void OnLiquidWeaponFiringStopped(LiquidWeapon param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters LiquidWeapon param1"
  },
  "OnFireworkStarted(BaseFirework)": {
    "prefix": "OnFireworkStarted",
    "body": "void OnFireworkStarted(BaseFirework param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseFirework param1"
  },
  "CanAccessVendingMachine(DeliveryDroneConfig,VendingMachine)": {
    "prefix": "CanAccessVendingMachine",
    "body": "void CanAccessVendingMachine(DeliveryDroneConfig param1, VendingMachine param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DeliveryDroneConfig param1, VendingMachine param2"
  },
  "OnWildlifeTrap(SurvivalFishTrap,ItemDefinition)": {
    "prefix": "OnWildlifeTrap",
    "body": "void OnWildlifeTrap(SurvivalFishTrap param1, ItemDefinition param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SurvivalFishTrap param1, ItemDefinition param2"
  },
  "OnMissionSucceeded(BaseMission,BaseMission.MissionInstance,BasePlayer)": {
    "prefix": "OnMissionSucceeded",
    "body": "void OnMissionSucceeded(BaseMission param1, BaseMission.MissionInstance param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseMission param1, BaseMission.MissionInstance param2, BasePlayer param3"
  },
  "OnWaterPurified(WaterPurifier,float)": {
    "prefix": "OnWaterPurified",
    "body": "void OnWaterPurified(WaterPurifier param1, float param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters WaterPurifier param1, float param2"
  },
  "OnVehicleModuleMove(BaseVehicleModule,BaseModularVehicle,BasePlayer)": {
    "prefix": "OnVehicleModuleMove",
    "body": "void OnVehicleModuleMove(BaseVehicleModule param1, BaseModularVehicle param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseVehicleModule param1, BaseModularVehicle param2, BasePlayer param3"
  },
  "CanNetworkTo(BasePlayer,BasePlayer)": {
    "prefix": "CanNetworkTo",
    "body": "void CanNetworkTo(BasePlayer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer param2"
  },
  "OnTerrainCreate(TerrainGenerator)": {
    "prefix": "OnTerrainCreate",
    "body": "void OnTerrainCreate(TerrainGenerator param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TerrainGenerator param1"
  },
  "OnCupboardProtectionCalculated(BuildingPrivlidge,float)": {
    "prefix": "OnCupboardProtectionCalculated",
    "body": "void OnCupboardProtectionCalculated(BuildingPrivlidge param1, float param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingPrivlidge param1, float param2"
  },
  "OnBonusItemDrop(Item,BasePlayer)": {
    "prefix": "OnBonusItemDrop",
    "body": "void OnBonusItemDrop(Item param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2"
  },
  "OnFireBallDamage(FireBall,BaseCombatEntity,HitInfo)": {
    "prefix": "OnFireBallDamage",
    "body": "void OnFireBallDamage(FireBall param1, BaseCombatEntity param2, HitInfo param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters FireBall param1, BaseCombatEntity param2, HitInfo param3"
  },
  "OnPhoneNameUpdated(PhoneController,string,BasePlayer)": {
    "prefix": "OnPhoneNameUpdated",
    "body": "void OnPhoneNameUpdated(PhoneController param1, string param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, string param2, BasePlayer param3"
  },
  "OnLiquidVesselFill(BaseLiquidVessel,BasePlayer,LiquidContainer)": {
    "prefix": "OnLiquidVesselFill",
    "body": "void OnLiquidVesselFill(BaseLiquidVessel param1, BasePlayer param2, LiquidContainer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseLiquidVessel param1, BasePlayer param2, LiquidContainer param3"
  },
  "OnTurretModeToggle(AutoTurret,BasePlayer)": {
    "prefix": "OnTurretModeToggle",
    "body": "void OnTurretModeToggle(AutoTurret param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, BasePlayer param2"
  },
  "OnMeleeAttack(BasePlayer,HitInfo)": {
    "prefix": "OnMeleeAttack",
    "body": "void OnMeleeAttack(BasePlayer param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HitInfo param2"
  },
  "OnTeamLeave(RelationshipManager.PlayerTeam,BasePlayer)": {
    "prefix": "OnTeamLeave",
    "body": "void OnTeamLeave(RelationshipManager.PlayerTeam param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RelationshipManager.PlayerTeam param1, BasePlayer param2"
  },
  "OnMapMarkerRemove(BasePlayer,System.Collections.Generic.List<ProtoBuf.MapNote>,int)": {
    "prefix": "OnMapMarkerRemove",
    "body": "void OnMapMarkerRemove(BasePlayer param1, System.Collections.Generic.List<ProtoBuf.MapNote> param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, System.Collections.Generic.List<ProtoBuf.MapNote> param2, int param3"
  },
  "OnEntityControl(AutoTurret,ulong)": {
    "prefix": "OnEntityControl",
    "body": "void OnEntityControl(AutoTurret param1, ulong param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, ulong param2"
  },
  "IOnBasePlayerHurt(BasePlayer,HitInfo)": {
    "prefix": "IOnBasePlayerHurt",
    "body": "void IOnBasePlayerHurt(BasePlayer param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HitInfo param2"
  },
  "OnResearchCostDetermine(Item)": {
    "prefix": "OnResearchCostDetermine",
    "body": "void OnResearchCostDetermine(Item param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1"
  },
  "OnEntityLeave(TriggerBase,BaseEntity)": {
    "prefix": "OnEntityLeave",
    "body": "void OnEntityLeave(TriggerBase param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TriggerBase param1, BaseEntity param2"
  },
  "CanChangeGrade(BasePlayer,BuildingBlock,BuildingGrade.Enum,ulong)": {
    "prefix": "CanChangeGrade",
    "body": "void CanChangeGrade(BasePlayer param1, BuildingBlock param2, BuildingGrade.Enum param3, ulong param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BuildingBlock param2, BuildingGrade.Enum param3, ulong param4"
  },
  "OnVehicleModulesAssign(ModularCar,Rust.Modular.ItemModVehicleModule[])": {
    "prefix": "OnVehicleModulesAssign",
    "body": "void OnVehicleModulesAssign(ModularCar param1, Rust.Modular.ItemModVehicleModule[] param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ModularCar param1, Rust.Modular.ItemModVehicleModule[] param2"
  },
  "CanBeHomingTargeted(RoadFlare)": {
    "prefix": "CanBeHomingTargeted",
    "body": "void CanBeHomingTargeted(RoadFlare param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RoadFlare param1"
  },
  "IOnUserApprove(Network.Connection)": {
    "prefix": "IOnUserApprove",
    "body": "void IOnUserApprove(Network.Connection param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1"
  },
  "OnItemUse(Item,int)": {
    "prefix": "OnItemUse",
    "body": "void OnItemUse(Item param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, int param2"
  },
  "CanLootEntity(BasePlayer,IndustrialCrafter)": {
    "prefix": "CanLootEntity",
    "body": "void CanLootEntity(BasePlayer param1, IndustrialCrafter param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, IndustrialCrafter param2"
  },
  "OnLootPlayer(BasePlayer,BasePlayer)": {
    "prefix": "OnLootPlayer",
    "body": "void OnLootPlayer(BasePlayer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer param2"
  },
  "OnTurretAssigned(AutoTurret,ulong,BasePlayer)": {
    "prefix": "OnTurretAssigned",
    "body": "void OnTurretAssigned(AutoTurret param1, ulong param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, ulong param2, BasePlayer param3"
  },
  "OnTurretShutdown(AutoTurret)": {
    "prefix": "OnTurretShutdown",
    "body": "void OnTurretShutdown(AutoTurret param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1"
  },
  "OnSurveyGather(SurveyCharge,Item)": {
    "prefix": "OnSurveyGather",
    "body": "void OnSurveyGather(SurveyCharge param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SurveyCharge param1, Item param2"
  },
  "OnPlayerMarkersSend(BasePlayer,ProtoBuf.MapNoteList)": {
    "prefix": "OnPlayerMarkersSend",
    "body": "void OnPlayerMarkersSend(BasePlayer param1, ProtoBuf.MapNoteList param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ProtoBuf.MapNoteList param2"
  },
  "OnInventoryAmmoFind(PlayerInventory,System.Collections.Generic.List<Item>,Rust.AmmoTypes)": {
    "prefix": "OnInventoryAmmoFind",
    "body": "void OnInventoryAmmoFind(PlayerInventory param1, System.Collections.Generic.List<Item> param2, Rust.AmmoTypes param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, System.Collections.Generic.List<Item> param2, Rust.AmmoTypes param3"
  },
  "OnPlayerDisconnected(BasePlayer,string)": {
    "prefix": "OnPlayerDisconnected",
    "body": "void OnPlayerDisconnected(BasePlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2"
  },
  "CanLockerAcceptItem(Locker,Item,int)": {
    "prefix": "CanLockerAcceptItem",
    "body": "void CanLockerAcceptItem(Locker param1, Item param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Locker param1, Item param2, int param3"
  },
  "OnToggleVendingBroadcast(VendingMachine,BasePlayer)": {
    "prefix": "OnToggleVendingBroadcast",
    "body": "void OnToggleVendingBroadcast(VendingMachine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, BasePlayer param2"
  },
  "OnRfListenerRemove(IRFObject,int)": {
    "prefix": "OnRfListenerRemove",
    "body": "void OnRfListenerRemove(IRFObject param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IRFObject param1, int param2"
  },
  "OnPhoneDialFail(PhoneController,Telephone.DialFailReason,BasePlayer)": {
    "prefix": "OnPhoneDialFail",
    "body": "void OnPhoneDialFail(PhoneController param1, Telephone.DialFailReason param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, Telephone.DialFailReason param2, BasePlayer param3"
  },
  "OnPlayerRespawned(BasePlayer)": {
    "prefix": "OnPlayerRespawned",
    "body": "void OnPlayerRespawned(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnHelicopterStrafeEnter(PatrolHelicopterAI,UnityEngine.Vector3,BasePlayer)": {
    "prefix": "OnHelicopterStrafeEnter",
    "body": "void OnHelicopterStrafeEnter(PatrolHelicopterAI param1, UnityEngine.Vector3 param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatrolHelicopterAI param1, UnityEngine.Vector3 param2, BasePlayer param3"
  },
  "OnFireworkDamage(BaseFirework,HitInfo)": {
    "prefix": "OnFireworkDamage",
    "body": "void OnFireworkDamage(BaseFirework param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseFirework param1, HitInfo param2"
  },
  "OnBradleyApcHunt(BradleyAPC)": {
    "prefix": "OnBradleyApcHunt",
    "body": "void OnBradleyApcHunt(BradleyAPC param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BradleyAPC param1"
  },
  "OnRackedWeaponMount(Item,BasePlayer,WeaponRack)": {
    "prefix": "OnRackedWeaponMount",
    "body": "void OnRackedWeaponMount(Item param1, BasePlayer param2, WeaponRack param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2, WeaponRack param3"
  },
  "OnPlayerWantsMount(BasePlayer,BaseMountable)": {
    "prefix": "OnPlayerWantsMount",
    "body": "void OnPlayerWantsMount(BasePlayer param1, BaseMountable param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseMountable param2"
  },
  "OnDigitalClockRingStop(DigitalClock)": {
    "prefix": "OnDigitalClockRingStop",
    "body": "void OnDigitalClockRingStop(DigitalClock param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DigitalClock param1"
  },
  "OnEntityLoaded(BaseNetworkable,BaseNetworkable.LoadInfo)": {
    "prefix": "OnEntityLoaded",
    "body": "void OnEntityLoaded(BaseNetworkable param1, BaseNetworkable.LoadInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNetworkable param1, BaseNetworkable.LoadInfo param2"
  },
  "OnBuildingSplit(BuildingManager.Building,uint)": {
    "prefix": "OnBuildingSplit",
    "body": "void OnBuildingSplit(BuildingManager.Building param1, uint param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingManager.Building param1, uint param2"
  },
  "OnPortalUsed(BasePlayer,BasePortal)": {
    "prefix": "OnPortalUsed",
    "body": "void OnPortalUsed(BasePlayer param1, BasePortal param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePortal param2"
  },
  "CanHackCrate(BasePlayer,HackableLockedCrate)": {
    "prefix": "CanHackCrate",
    "body": "void CanHackCrate(BasePlayer param1, HackableLockedCrate param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HackableLockedCrate param2"
  },
  "OnTurretToggle(AutoTurret)": {
    "prefix": "OnTurretToggle",
    "body": "void OnTurretToggle(AutoTurret param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1"
  },
  "OnPlayerInput(BasePlayer,InputState)": {
    "prefix": "OnPlayerInput",
    "body": "void OnPlayerInput(BasePlayer param1, InputState param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, InputState param2"
  },
  "CanTrainCarCouple(TrainCar,TrainCar)": {
    "prefix": "CanTrainCarCouple",
    "body": "void CanTrainCarCouple(TrainCar param1, TrainCar param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TrainCar param1, TrainCar param2"
  },
  "OnFlameExplosion(FlameExplosive,UnityEngine.Collider)": {
    "prefix": "OnFlameExplosion",
    "body": "void OnFlameExplosion(FlameExplosive param1, UnityEngine.Collider param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters FlameExplosive param1, UnityEngine.Collider param2"
  },
  "OnEntityMounted(BaseMountable,BasePlayer)": {
    "prefix": "OnEntityMounted",
    "body": "void OnEntityMounted(BaseMountable param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseMountable param1, BasePlayer param2"
  },
  "OnSignLocked(Signage,BasePlayer)": {
    "prefix": "OnSignLocked",
    "body": "void OnSignLocked(Signage param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Signage param1, BasePlayer param2"
  },
  "CanUpdateSign(BasePlayer,PhotoFrame)": {
    "prefix": "CanUpdateSign",
    "body": "void CanUpdateSign(BasePlayer param1, PhotoFrame param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, PhotoFrame param2"
  },
  "CanHelicopterDropCrate(CH47HelicopterAIController)": {
    "prefix": "CanHelicopterDropCrate",
    "body": "void CanHelicopterDropCrate(CH47HelicopterAIController param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CH47HelicopterAIController param1"
  },
  "OnOvenToggle(BaseOven,BasePlayer)": {
    "prefix": "OnOvenToggle",
    "body": "void OnOvenToggle(BaseOven param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseOven param1, BasePlayer param2"
  },
  "OnExplosiveDud(DudTimedExplosive)": {
    "prefix": "OnExplosiveDud",
    "body": "void OnExplosiveDud(DudTimedExplosive param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DudTimedExplosive param1"
  },
  "OnGiveSoldItem(VendingMachine,Item,BasePlayer)": {
    "prefix": "OnGiveSoldItem",
    "body": "void OnGiveSoldItem(VendingMachine param1, Item param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, Item param2, BasePlayer param3"
  },
  "OnPlayerCorpseSpawned(BasePlayer,PlayerCorpse)": {
    "prefix": "OnPlayerCorpseSpawned",
    "body": "void OnPlayerCorpseSpawned(BasePlayer param1, PlayerCorpse param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, PlayerCorpse param2"
  },
  "OnNpcTargetSense(BaseEntity,BaseEntity,AIBrainSenses)": {
    "prefix": "OnNpcTargetSense",
    "body": "void OnNpcTargetSense(BaseEntity param1, BaseEntity param2, AIBrainSenses param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, BaseEntity param2, AIBrainSenses param3"
  },
  "OnCorpsePopulate(NPCPlayer,NPCPlayerCorpse)": {
    "prefix": "OnCorpsePopulate",
    "body": "void OnCorpsePopulate(NPCPlayer param1, NPCPlayerCorpse param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NPCPlayer param1, NPCPlayerCorpse param2"
  },
  "OnSleepingBagValidCheck(SleepingBag,ulong,bool)": {
    "prefix": "OnSleepingBagValidCheck",
    "body": "void OnSleepingBagValidCheck(SleepingBag param1, ulong param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SleepingBag param1, ulong param2, bool param3"
  },
  "CanTakeCutting(BasePlayer,GrowableEntity)": {
    "prefix": "CanTakeCutting",
    "body": "void CanTakeCutting(BasePlayer param1, GrowableEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, GrowableEntity param2"
  },
  "CanNpcEat(BaseNpc,BaseEntity)": {
    "prefix": "CanNpcEat",
    "body": "void CanNpcEat(BaseNpc param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNpc param1, BaseEntity param2"
  },
  "OnMlrsTargetSet(MLRS,UnityEngine.Vector3,BasePlayer)": {
    "prefix": "OnMlrsTargetSet",
    "body": "void OnMlrsTargetSet(MLRS param1, UnityEngine.Vector3 param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MLRS param1, UnityEngine.Vector3 param2, BasePlayer param3"
  },
  "OnBookmarkDelete(ComputerStation,BasePlayer,string)": {
    "prefix": "OnBookmarkDelete",
    "body": "void OnBookmarkDelete(ComputerStation param1, BasePlayer param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ComputerStation param1, BasePlayer param2, string param3"
  },
  "OnStashHidden(StashContainer,BasePlayer)": {
    "prefix": "OnStashHidden",
    "body": "void OnStashHidden(StashContainer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters StashContainer param1, BasePlayer param2"
  },
  "OnExcavatorSuppliesRequest(ExcavatorSignalComputer,BasePlayer)": {
    "prefix": "OnExcavatorSuppliesRequest",
    "body": "void OnExcavatorSuppliesRequest(ExcavatorSignalComputer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ExcavatorSignalComputer param1, BasePlayer param2"
  },
  "OnExperimentEnd(Workbench)": {
    "prefix": "OnExperimentEnd",
    "body": "void OnExperimentEnd(Workbench param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Workbench param1"
  },
  "OnPlayerLand(BasePlayer,float)": {
    "prefix": "OnPlayerLand",
    "body": "void OnPlayerLand(BasePlayer param1, float param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, float param2"
  },
  "OnEntitySpawned(BaseNetworkable)": {
    "prefix": "OnEntitySpawned",
    "body": "void OnEntitySpawned(BaseNetworkable param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNetworkable param1"
  },
  "OnEntityDeath(BaseCombatEntity,HitInfo)": {
    "prefix": "OnEntityDeath",
    "body": "void OnEntityDeath(BaseCombatEntity param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseCombatEntity param1, HitInfo param2"
  },
  "CanResearchItem(BasePlayer,Item)": {
    "prefix": "CanResearchItem",
    "body": "void CanResearchItem(BasePlayer param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Item param2"
  },
  "OnBonusItemDropped(Item,BasePlayer)": {
    "prefix": "OnBonusItemDropped",
    "body": "void OnBonusItemDropped(Item param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2"
  },
  "OnHammerHit(BasePlayer,HitInfo)": {
    "prefix": "OnHammerHit",
    "body": "void OnHammerHit(BasePlayer param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HitInfo param2"
  },
  "OnTeamAcceptInvite(RelationshipManager.PlayerTeam,BasePlayer)": {
    "prefix": "OnTeamAcceptInvite",
    "body": "void OnTeamAcceptInvite(RelationshipManager.PlayerTeam param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RelationshipManager.PlayerTeam param1, BasePlayer param2"
  },
  "OnBuildingPrivilege(BaseEntity,OBB)": {
    "prefix": "OnBuildingPrivilege",
    "body": "void OnBuildingPrivilege(BaseEntity param1, OBB param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, OBB param2"
  },
  "OnBradleyApcThink(BradleyAPC)": {
    "prefix": "OnBradleyApcThink",
    "body": "void OnBradleyApcThink(BradleyAPC param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BradleyAPC param1"
  },
  "OnPlayerDeath(BasePlayer,HitInfo)": {
    "prefix": "OnPlayerDeath",
    "body": "void OnPlayerDeath(BasePlayer param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HitInfo param2"
  },
  "OnVendingShopOpened(VendingMachine,BasePlayer)": {
    "prefix": "OnVendingShopOpened",
    "body": "void OnVendingShopOpened(VendingMachine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, BasePlayer param2"
  },
  "OnLootEntity(BasePlayer,BaseEntity)": {
    "prefix": "OnLootEntity",
    "body": "void OnLootEntity(BasePlayer param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseEntity param2"
  },
  "OnMissionFailed(BaseMission,BaseMission.MissionInstance,BasePlayer,BaseMission.MissionFailReason)": {
    "prefix": "OnMissionFailed",
    "body": "void OnMissionFailed(BaseMission param1, BaseMission.MissionInstance param2, BasePlayer param3, BaseMission.MissionFailReason param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseMission param1, BaseMission.MissionInstance param2, BasePlayer param3, BaseMission.MissionFailReason param4"
  },
  "OnReactiveTargetReset(ReactiveTarget)": {
    "prefix": "OnReactiveTargetReset",
    "body": "void OnReactiveTargetReset(ReactiveTarget param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ReactiveTarget param1"
  },
  "CanDeployScientists(BradleyAPC,BaseEntity,System.Collections.Generic.List<GameObjectRef>,System.Collections.Generic.List<UnityEngine.Vector3>)": {
    "prefix": "CanDeployScientists",
    "body": "void CanDeployScientists(BradleyAPC param1, BaseEntity param2, System.Collections.Generic.List<GameObjectRef> param3, System.Collections.Generic.List<UnityEngine.Vector3> param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BradleyAPC param1, BaseEntity param2, System.Collections.Generic.List<GameObjectRef> param3, System.Collections.Generic.List<UnityEngine.Vector3> param4"
  },
  "OnTeamInvite(BasePlayer,BasePlayer)": {
    "prefix": "OnTeamInvite",
    "body": "void OnTeamInvite(BasePlayer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer param2"
  },
  "OnPlayerLanded(BasePlayer,float)": {
    "prefix": "OnPlayerLanded",
    "body": "void OnPlayerLanded(BasePlayer param1, float param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, float param2"
  },
  "OnPlayerSetInfo(Network.Connection,string,string)": {
    "prefix": "OnPlayerSetInfo",
    "body": "void OnPlayerSetInfo(Network.Connection param1, string param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1, string param2, string param3"
  },
  "OnStructureDemolish(StabilityEntity,BasePlayer,bool)": {
    "prefix": "OnStructureDemolish",
    "body": "void OnStructureDemolish(StabilityEntity param1, BasePlayer param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters StabilityEntity param1, BasePlayer param2, bool param3"
  },
  "OnEntityStabilityCheck(StabilityEntity)": {
    "prefix": "OnEntityStabilityCheck",
    "body": "void OnEntityStabilityCheck(StabilityEntity param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters StabilityEntity param1"
  },
  "CanSetBedPublic(BasePlayer,SleepingBag)": {
    "prefix": "CanSetBedPublic",
    "body": "void CanSetBedPublic(BasePlayer param1, SleepingBag param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, SleepingBag param2"
  },
  "OnPatrolHelicopterKill(PatrolHelicopter,HitInfo)": {
    "prefix": "OnPatrolHelicopterKill",
    "body": "void OnPatrolHelicopterKill(PatrolHelicopter param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatrolHelicopter param1, HitInfo param2"
  },
  "OnRespawnInformationGiven(BasePlayer,System.Collections.Generic.List<ProtoBuf.RespawnInformation.SpawnOptions>)": {
    "prefix": "OnRespawnInformationGiven",
    "body": "void OnRespawnInformationGiven(BasePlayer param1, System.Collections.Generic.List<ProtoBuf.RespawnInformation.SpawnOptions> param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, System.Collections.Generic.List<ProtoBuf.RespawnInformation.SpawnOptions> param2"
  },
  "OnPlayerWantsDismount(BasePlayer,BaseMountable)": {
    "prefix": "OnPlayerWantsDismount",
    "body": "void OnPlayerWantsDismount(BasePlayer param1, BaseMountable param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseMountable param2"
  },
  "OnPlayerBanned(Network.Connection,string)": {
    "prefix": "OnPlayerBanned",
    "body": "void OnPlayerBanned(Network.Connection param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1, string param2"
  },
  "OnFuelAmountCheck(EntityFuelSystem,Item)": {
    "prefix": "OnFuelAmountCheck",
    "body": "void OnFuelAmountCheck(EntityFuelSystem param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters EntityFuelSystem param1, Item param2"
  },
  "OnRfListenerAdd(IRFObject,int)": {
    "prefix": "OnRfListenerAdd",
    "body": "void OnRfListenerAdd(IRFObject param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IRFObject param1, int param2"
  },
  "OnSamSiteTarget(SamSite,SamSite.ISamSiteTarget)": {
    "prefix": "OnSamSiteTarget",
    "body": "void OnSamSiteTarget(SamSite param1, SamSite.ISamSiteTarget param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SamSite param1, SamSite.ISamSiteTarget param2"
  },
  "OnWeaponFired(BaseProjectile,BasePlayer,ItemModProjectile,ProtoBuf.ProjectileShoot)": {
    "prefix": "OnWeaponFired",
    "body": "void OnWeaponFired(BaseProjectile param1, BasePlayer param2, ItemModProjectile param3, ProtoBuf.ProjectileShoot param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseProjectile param1, BasePlayer param2, ItemModProjectile param3, ProtoBuf.ProjectileShoot param4"
  },
  "OnItemRemove(Item)": {
    "prefix": "OnItemRemove",
    "body": "void OnItemRemove(Item param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1"
  },
  "OnSignUpdated(Signage,BasePlayer,int)": {
    "prefix": "OnSignUpdated",
    "body": "void OnSignUpdated(Signage param1, BasePlayer param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Signage param1, BasePlayer param2, int param3"
  },
  "OnInventoryAmmoItemFind(PlayerInventory,ItemDefinition)": {
    "prefix": "OnInventoryAmmoItemFind",
    "body": "void OnInventoryAmmoItemFind(PlayerInventory param1, ItemDefinition param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, ItemDefinition param2"
  },
  "OnNoGoZoneAdded(PatrolHelicopterAI,PatrolHelicopterAI.DangerZone)": {
    "prefix": "OnNoGoZoneAdded",
    "body": "void OnNoGoZoneAdded(PatrolHelicopterAI param1, PatrolHelicopterAI.DangerZone param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PatrolHelicopterAI param1, PatrolHelicopterAI.DangerZone param2"
  },
  "OnDieselEngineToggle(DieselEngine,BasePlayer)": {
    "prefix": "OnDieselEngineToggle",
    "body": "void OnDieselEngineToggle(DieselEngine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DieselEngine param1, BasePlayer param2"
  },
  "OnLootItem(BasePlayer,Item)": {
    "prefix": "OnLootItem",
    "body": "void OnLootItem(BasePlayer param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Item param2"
  },
  "OnExplosiveThrown(BasePlayer,BaseEntity,ThrownWeapon)": {
    "prefix": "OnExplosiveThrown",
    "body": "void OnExplosiveThrown(BasePlayer param1, BaseEntity param2, ThrownWeapon param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseEntity param2, ThrownWeapon param3"
  },
  "OnPlanterBoxFertilize(PlanterBox)": {
    "prefix": "OnPlanterBoxFertilize",
    "body": "void OnPlanterBoxFertilize(PlanterBox param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlanterBox param1"
  },
  "OnVendingShopOpened(NPCVendingMachine,BasePlayer)": {
    "prefix": "OnVendingShopOpened",
    "body": "void OnVendingShopOpened(NPCVendingMachine param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NPCVendingMachine param1, BasePlayer param2"
  },
  "OnPlayerTick(BasePlayer,PlayerTick,bool)": {
    "prefix": "OnPlayerTick",
    "body": "void OnPlayerTick(BasePlayer param1, PlayerTick param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, PlayerTick param2, bool param3"
  },
  "OnFishingStopped(BaseFishingRod,BaseFishingRod.FailReason)": {
    "prefix": "OnFishingStopped",
    "body": "void OnFishingStopped(BaseFishingRod param1, BaseFishingRod.FailReason param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseFishingRod param1, BaseFishingRod.FailReason param2"
  },
  "OnBoomboxStationUpdated(BoomBox,string,BasePlayer)": {
    "prefix": "OnBoomboxStationUpdated",
    "body": "void OnBoomboxStationUpdated(BoomBox param1, string param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BoomBox param1, string param2, BasePlayer param3"
  },
  "OnItemRemovedFromContainer(ItemContainer,Item)": {
    "prefix": "OnItemRemovedFromContainer",
    "body": "void OnItemRemovedFromContainer(ItemContainer param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemContainer param1, Item param2"
  },
  "OnMlrsFiringEnded(MLRS)": {
    "prefix": "OnMlrsFiringEnded",
    "body": "void OnMlrsFiringEnded(MLRS param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MLRS param1"
  },
  "IOnLoseCondition(Item,float)": {
    "prefix": "IOnLoseCondition",
    "body": "void IOnLoseCondition(Item param1, float param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, float param2"
  },
  "OnDroppedItemCombined(DroppedItem)": {
    "prefix": "OnDroppedItemCombined",
    "body": "void OnDroppedItemCombined(DroppedItem param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DroppedItem param1"
  },
  "OnTrainCarUncouple(TrainCar,BasePlayer)": {
    "prefix": "OnTrainCarUncouple",
    "body": "void OnTrainCarUncouple(TrainCar param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TrainCar param1, BasePlayer param2"
  },
  "OnItemDropped(Item,BaseEntity)": {
    "prefix": "OnItemDropped",
    "body": "void OnItemDropped(Item param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BaseEntity param2"
  },
  "OnPhoneDialFailed(PhoneController,Telephone.DialFailReason,BasePlayer)": {
    "prefix": "OnPhoneDialFailed",
    "body": "void OnPhoneDialFailed(PhoneController param1, Telephone.DialFailReason param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, Telephone.DialFailReason param2, BasePlayer param3"
  },
  "IOnPlayerBanned(Network.Connection,AuthResponse)": {
    "prefix": "IOnPlayerBanned",
    "body": "void IOnPlayerBanned(Network.Connection param1, AuthResponse param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1, AuthResponse param2"
  },
  "OnPlayerHandcuff(BasePlayer,BasePlayer)": {
    "prefix": "OnPlayerHandcuff",
    "body": "void OnPlayerHandcuff(BasePlayer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer param2"
  },
  "OnRfFrequencyChanged(Detonator,int,BasePlayer)": {
    "prefix": "OnRfFrequencyChanged",
    "body": "void OnRfFrequencyChanged(Detonator param1, int param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Detonator param1, int param2, BasePlayer param3"
  },
  "OnTick()": {
    "prefix": "OnTick",
    "body": "void OnTick()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "OnPayForPlacement(BasePlayer,Planner,Construction)": {
    "prefix": "OnPayForPlacement",
    "body": "void OnPayForPlacement(BasePlayer param1, Planner param2, Construction param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Planner param2, Construction param3"
  },
  "OnPlayerRecover(BasePlayer)": {
    "prefix": "OnPlayerRecover",
    "body": "void OnPlayerRecover(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "CanBeAwardedAdventGift(AdventCalendar,BasePlayer)": {
    "prefix": "CanBeAwardedAdventGift",
    "body": "void CanBeAwardedAdventGift(AdventCalendar param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AdventCalendar param1, BasePlayer param2"
  },
  "OnTrapArm(BearTrap,BasePlayer)": {
    "prefix": "OnTrapArm",
    "body": "void OnTrapArm(BearTrap param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BearTrap param1, BasePlayer param2"
  },
  "OnEntityEnter(TriggerComfort,BaseEntity)": {
    "prefix": "OnEntityEnter",
    "body": "void OnEntityEnter(TriggerComfort param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TriggerComfort param1, BaseEntity param2"
  },
  "OnVehicleHornPressed(VehicleModuleSeating,BasePlayer)": {
    "prefix": "OnVehicleHornPressed",
    "body": "void OnVehicleHornPressed(VehicleModuleSeating param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VehicleModuleSeating param1, BasePlayer param2"
  },
  "OnConnectionQueue(Network.Connection)": {
    "prefix": "OnConnectionQueue",
    "body": "void OnConnectionQueue(Network.Connection param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1"
  },
  "OnProjectileRicochet(BasePlayer,ProtoBuf.PlayerProjectileRicochet)": {
    "prefix": "OnProjectileRicochet",
    "body": "void OnProjectileRicochet(BasePlayer param1, ProtoBuf.PlayerProjectileRicochet param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ProtoBuf.PlayerProjectileRicochet param2"
  },
  "OnEntityPickedUp(BaseCombatEntity,Item,BasePlayer)": {
    "prefix": "OnEntityPickedUp",
    "body": "void OnEntityPickedUp(BaseCombatEntity param1, Item param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseCombatEntity param1, Item param2, BasePlayer param3"
  },
  "OnNpcConversationResponded(NPCTalking,BasePlayer,ConversationData,ConversationData.ResponseNode)": {
    "prefix": "OnNpcConversationResponded",
    "body": "void OnNpcConversationResponded(NPCTalking param1, BasePlayer param2, ConversationData param3, ConversationData.ResponseNode param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NPCTalking param1, BasePlayer param2, ConversationData param3, ConversationData.ResponseNode param4"
  },
  "OnPlayerDrink(BasePlayer,LiquidContainer)": {
    "prefix": "OnPlayerDrink",
    "body": "void OnPlayerDrink(BasePlayer param1, LiquidContainer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, LiquidContainer param2"
  },
  "OnWorldProjectileCreate(HitInfo,Item)": {
    "prefix": "OnWorldProjectileCreate",
    "body": "void OnWorldProjectileCreate(HitInfo param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HitInfo param1, Item param2"
  },
  "OnCrateLanded(HackableLockedCrate)": {
    "prefix": "OnCrateLanded",
    "body": "void OnCrateLanded(HackableLockedCrate param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HackableLockedCrate param1"
  },
  "OnExplosiveFuseSet(TimedExplosive,float)": {
    "prefix": "OnExplosiveFuseSet",
    "body": "void OnExplosiveFuseSet(TimedExplosive param1, float param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TimedExplosive param1, float param2"
  },
  "OnCupboardClearList(VehiclePrivilege,BasePlayer)": {
    "prefix": "OnCupboardClearList",
    "body": "void OnCupboardClearList(VehiclePrivilege param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VehiclePrivilege param1, BasePlayer param2"
  },
  "CanEquipItem(PlayerInventory,Item,int)": {
    "prefix": "CanEquipItem",
    "body": "void CanEquipItem(PlayerInventory param1, Item param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, Item param2, int param3"
  },
  "OnRackedWeaponMounted(Item,BasePlayer,WeaponRack)": {
    "prefix": "OnRackedWeaponMounted",
    "body": "void OnRackedWeaponMounted(Item param1, BasePlayer param2, WeaponRack param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2, WeaponRack param3"
  },
  "CanLootEntity(BasePlayer,ResourceContainer)": {
    "prefix": "CanLootEntity",
    "body": "void CanLootEntity(BasePlayer param1, ResourceContainer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ResourceContainer param2"
  },
  "InitLogging()": {
    "prefix": "InitLogging",
    "body": "void InitLogging()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "OnPlayerColliderEnable(BasePlayer,UnityEngine.CapsuleCollider)": {
    "prefix": "OnPlayerColliderEnable",
    "body": "void OnPlayerColliderEnable(BasePlayer param1, UnityEngine.CapsuleCollider param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, UnityEngine.CapsuleCollider param2"
  },
  "OnNpcAttack(BaseNpc,BaseEntity)": {
    "prefix": "OnNpcAttack",
    "body": "void OnNpcAttack(BaseNpc param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNpc param1, BaseEntity param2"
  },
  "OnClientAuth(Network.Connection)": {
    "prefix": "OnClientAuth",
    "body": "void OnClientAuth(Network.Connection param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1"
  },
  "OnInventoryAmmoItemFind(PlayerInventory,Rust.AmmoTypes)": {
    "prefix": "OnInventoryAmmoItemFind",
    "body": "void OnInventoryAmmoItemFind(PlayerInventory param1, Rust.AmmoTypes param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, Rust.AmmoTypes param2"
  },
  "OnInventoryItemsFind(PlayerInventory,int)": {
    "prefix": "OnInventoryItemsFind",
    "body": "void OnInventoryItemsFind(PlayerInventory param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, int param2"
  },
  "OnNpcConversationEnded(NPCTalking,BasePlayer)": {
    "prefix": "OnNpcConversationEnded",
    "body": "void OnNpcConversationEnded(NPCTalking param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NPCTalking param1, BasePlayer param2"
  },
  "OnResourceDepositCreated(ResourceDepositManager.ResourceDeposit)": {
    "prefix": "OnResourceDepositCreated",
    "body": "void OnResourceDepositCreated(ResourceDepositManager.ResourceDeposit param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ResourceDepositManager.ResourceDeposit param1"
  },
  "OnHuntEventEnd(EggHuntEvent)": {
    "prefix": "OnHuntEventEnd",
    "body": "void OnHuntEventEnd(EggHuntEvent param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters EggHuntEvent param1"
  },
  "OnItemRepair(BasePlayer,Item)": {
    "prefix": "OnItemRepair",
    "body": "void OnItemRepair(BasePlayer param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Item param2"
  },
  "OnInventoryItemFind(PlayerInventory,int)": {
    "prefix": "OnInventoryItemFind",
    "body": "void OnInventoryItemFind(PlayerInventory param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, int param2"
  },
  "OnSignContentCopied(SignContent,ISignage,IUGCBrowserEntity)": {
    "prefix": "OnSignContentCopied",
    "body": "void OnSignContentCopied(SignContent param1, ISignage param2, IUGCBrowserEntity param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SignContent param1, ISignage param2, IUGCBrowserEntity param3"
  },
  "OnRfBroadcasterAdd(IRFObject,int)": {
    "prefix": "OnRfBroadcasterAdd",
    "body": "void OnRfBroadcasterAdd(IRFObject param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IRFObject param1, int param2"
  },
  "OnRackedWeaponTake(Item,BasePlayer,WeaponRack)": {
    "prefix": "OnRackedWeaponTake",
    "body": "void OnRackedWeaponTake(Item param1, BasePlayer param2, WeaponRack param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2, WeaponRack param3"
  },
  "OnBookmarkControlStarted(ComputerStation,BasePlayer,string,IRemoteControllable)": {
    "prefix": "OnBookmarkControlStarted",
    "body": "void OnBookmarkControlStarted(ComputerStation param1, BasePlayer param2, string param3, IRemoteControllable param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ComputerStation param1, BasePlayer param2, string param3, IRemoteControllable param4"
  },
  "OnPlayerWound(BasePlayer,HitInfo)": {
    "prefix": "OnPlayerWound",
    "body": "void OnPlayerWound(BasePlayer param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HitInfo param2"
  },
  "CanWearItem(PlayerInventory,Item,int)": {
    "prefix": "CanWearItem",
    "body": "void CanWearItem(PlayerInventory param1, Item param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, Item param2, int param3"
  },
  "CanDropActiveItem(BasePlayer)": {
    "prefix": "CanDropActiveItem",
    "body": "void CanDropActiveItem(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnDebrisSpawn(DecayEntity,UnityEngine.Vector3,UnityEngine.Quaternion,bool)": {
    "prefix": "OnDebrisSpawn",
    "body": "void OnDebrisSpawn(DecayEntity param1, UnityEngine.Vector3 param2, UnityEngine.Quaternion param3, bool param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DecayEntity param1, UnityEngine.Vector3 param2, UnityEngine.Quaternion param3, bool param4"
  },
  "OnBookmarkAdd(ComputerStation,BasePlayer,string)": {
    "prefix": "OnBookmarkAdd",
    "body": "void OnBookmarkAdd(ComputerStation param1, BasePlayer param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ComputerStation param1, BasePlayer param2, string param3"
  },
  "OnVendingShopRename(VendingMachine,string,BasePlayer)": {
    "prefix": "OnVendingShopRename",
    "body": "void OnVendingShopRename(VendingMachine param1, string param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, string param2, BasePlayer param3"
  },
  "OnSignUpdated(PhotoFrame,BasePlayer)": {
    "prefix": "OnSignUpdated",
    "body": "void OnSignUpdated(PhotoFrame param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhotoFrame param1, BasePlayer param2"
  },
  "OnPhoneCallStart(PhoneController,PhoneController,BasePlayer)": {
    "prefix": "OnPhoneCallStart",
    "body": "void OnPhoneCallStart(PhoneController param1, PhoneController param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, PhoneController param2, BasePlayer param3"
  },
  "CanBradleyApcTarget(BradleyAPC,BaseEntity)": {
    "prefix": "CanBradleyApcTarget",
    "body": "void CanBradleyApcTarget(BradleyAPC param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BradleyAPC param1, BaseEntity param2"
  },
  "CanDesignFirework(BasePlayer,PatternFirework)": {
    "prefix": "CanDesignFirework",
    "body": "void CanDesignFirework(BasePlayer param1, PatternFirework param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, PatternFirework param2"
  },
  "OnDispenserGather(ResourceDispenser,BasePlayer,Item)": {
    "prefix": "OnDispenserGather",
    "body": "void OnDispenserGather(ResourceDispenser param1, BasePlayer param2, Item param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ResourceDispenser param1, BasePlayer param2, Item param3"
  },
  "OnElevatorMove(Elevator,int)": {
    "prefix": "OnElevatorMove",
    "body": "void OnElevatorMove(Elevator param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Elevator param1, int param2"
  },
  "OnEngineStatsRefreshed(VehicleModuleEngine,Rust.Modular.EngineStorage)": {
    "prefix": "OnEngineStatsRefreshed",
    "body": "void OnEngineStatsRefreshed(VehicleModuleEngine param1, Rust.Modular.EngineStorage param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VehicleModuleEngine param1, Rust.Modular.EngineStorage param2"
  },
  "OnPlayerVoice(BasePlayer,byte[])": {
    "prefix": "OnPlayerVoice",
    "body": "void OnPlayerVoice(BasePlayer param1, byte[] param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, byte[] param2"
  },
  "OnStructureRotate(BuildingBlock,BasePlayer)": {
    "prefix": "OnStructureRotate",
    "body": "void OnStructureRotate(BuildingBlock param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingBlock param1, BasePlayer param2"
  },
  "OnCargoShipSpawnCrate(CargoShip)": {
    "prefix": "OnCargoShipSpawnCrate",
    "body": "void OnCargoShipSpawnCrate(CargoShip param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CargoShip param1"
  },
  "OnNpcEquipWeapon(NPCPlayer,Item)": {
    "prefix": "OnNpcEquipWeapon",
    "body": "void OnNpcEquipWeapon(NPCPlayer param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NPCPlayer param1, Item param2"
  },
  "OnExcavatorGather(ExcavatorArm,Item)": {
    "prefix": "OnExcavatorGather",
    "body": "void OnExcavatorGather(ExcavatorArm param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ExcavatorArm param1, Item param2"
  },
  "CanSpectateTarget(BasePlayer,string)": {
    "prefix": "CanSpectateTarget",
    "body": "void CanSpectateTarget(BasePlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2"
  },
  "OnShopCancelClick(ShopFront,BasePlayer)": {
    "prefix": "OnShopCancelClick",
    "body": "void OnShopCancelClick(ShopFront param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ShopFront param1, BasePlayer param2"
  },
  "OnShopCompleteTrade(ShopFront)": {
    "prefix": "OnShopCompleteTrade",
    "body": "void OnShopCompleteTrade(ShopFront param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ShopFront param1"
  },
  "OnRfFrequencyChanged(PagerEntity,int,BasePlayer)": {
    "prefix": "OnRfFrequencyChanged",
    "body": "void OnRfFrequencyChanged(PagerEntity param1, int param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PagerEntity param1, int param2, BasePlayer param3"
  },
  "OnLootEntityEnd(BasePlayer,ItemBasedFlowRestrictor)": {
    "prefix": "OnLootEntityEnd",
    "body": "void OnLootEntityEnd(BasePlayer param1, ItemBasedFlowRestrictor param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ItemBasedFlowRestrictor param2"
  },
  "OnPlayerCorpseSpawn(BasePlayer)": {
    "prefix": "OnPlayerCorpseSpawn",
    "body": "void OnPlayerCorpseSpawn(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnTechTreeNodeUnlock(Workbench,TechTreeData.NodeInstance,BasePlayer)": {
    "prefix": "OnTechTreeNodeUnlock",
    "body": "void OnTechTreeNodeUnlock(Workbench param1, TechTreeData.NodeInstance param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Workbench param1, TechTreeData.NodeInstance param2, BasePlayer param3"
  },
  "OnBedMade(SleepingBag,BasePlayer)": {
    "prefix": "OnBedMade",
    "body": "void OnBedMade(SleepingBag param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SleepingBag param1, BasePlayer param2"
  },
  "OnEngineStart(MotorRowboat,BasePlayer)": {
    "prefix": "OnEngineStart",
    "body": "void OnEngineStart(MotorRowboat param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MotorRowboat param1, BasePlayer param2"
  },
  "OnVendingTransaction(VendingMachine,BasePlayer,int,int,ItemContainer)": {
    "prefix": "OnVendingTransaction",
    "body": "void OnVendingTransaction(VendingMachine param1, BasePlayer param2, int param3, int param4, ItemContainer param5)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, BasePlayer param2, int param3, int param4, ItemContainer param5"
  },
  "OnClientCommand(Network.Connection,string)": {
    "prefix": "OnClientCommand",
    "body": "void OnClientCommand(Network.Connection param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1, string param2"
  },
  "OnResearchCostDetermine(ItemDefinition)": {
    "prefix": "OnResearchCostDetermine",
    "body": "void OnResearchCostDetermine(ItemDefinition param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemDefinition param1"
  },
  "OnPlayerSleep(BasePlayer)": {
    "prefix": "OnPlayerSleep",
    "body": "void OnPlayerSleep(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnNetworkSubscriptionsGather(NetworkVisibilityGrid,Network.Visibility.Group,System.Collections.Generic.List<Network.Visibility.Group>,int)": {
    "prefix": "OnNetworkSubscriptionsGather",
    "body": "void OnNetworkSubscriptionsGather(NetworkVisibilityGrid param1, Network.Visibility.Group param2, System.Collections.Generic.List<Network.Visibility.Group> param3, int param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NetworkVisibilityGrid param1, Network.Visibility.Group param2, System.Collections.Generic.List<Network.Visibility.Group> param3, int param4"
  },
  "OnXmasLootDistribute(XMasRefill)": {
    "prefix": "OnXmasLootDistribute",
    "body": "void OnXmasLootDistribute(XMasRefill param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters XMasRefill param1"
  },
  "OnItemStacked(Item,Item,ItemContainer,int)": {
    "prefix": "OnItemStacked",
    "body": "void OnItemStacked(Item param1, Item param2, ItemContainer param3, int param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, Item param2, ItemContainer param3, int param4"
  },
  "OnCargoShipHarborArrived(CargoShip)": {
    "prefix": "OnCargoShipHarborArrived",
    "body": "void OnCargoShipHarborArrived(CargoShip param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CargoShip param1"
  },
  "OnPhoneAnswered(PhoneController,PhoneController)": {
    "prefix": "OnPhoneAnswered",
    "body": "void OnPhoneAnswered(PhoneController param1, PhoneController param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, PhoneController param2"
  },
  "OnAIBrainStateSwitch(BaseAIBrain,BaseAIBrain.BasicAIState,BaseAIBrain.BasicAIState)": {
    "prefix": "OnAIBrainStateSwitch",
    "body": "void OnAIBrainStateSwitch(BaseAIBrain param1, BaseAIBrain.BasicAIState param2, BaseAIBrain.BasicAIState param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseAIBrain param1, BaseAIBrain.BasicAIState param2, BaseAIBrain.BasicAIState param3"
  },
  "IOnRconInitialize()": {
    "prefix": "IOnRconInitialize",
    "body": "void IOnRconInitialize()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "CanUseHBHFSensor(BasePlayer,HBHFSensor)": {
    "prefix": "CanUseHBHFSensor",
    "body": "void CanUseHBHFSensor(BasePlayer param1, HBHFSensor param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HBHFSensor param2"
  },
  "OnTeamCreate(BasePlayer)": {
    "prefix": "OnTeamCreate",
    "body": "void OnTeamCreate(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnRocketLaunched(BasePlayer,BaseEntity)": {
    "prefix": "OnRocketLaunched",
    "body": "void OnRocketLaunched(BasePlayer param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseEntity param2"
  },
  "OnPlayerKicked(BasePlayer,string,bool)": {
    "prefix": "OnPlayerKicked",
    "body": "void OnPlayerKicked(BasePlayer param1, string param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2, bool param3"
  },
  "OnDigitalClockRing(DigitalClock)": {
    "prefix": "OnDigitalClockRing",
    "body": "void OnDigitalClockRing(DigitalClock param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DigitalClock param1"
  },
  "OnHorseHitch(RidableHorse,HitchTrough.HitchSpot)": {
    "prefix": "OnHorseHitch",
    "body": "void OnHorseHitch(RidableHorse param1, HitchTrough.HitchSpot param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RidableHorse param1, HitchTrough.HitchSpot param2"
  },
  "OnCoalingTowerGather(CoalingTower,Item)": {
    "prefix": "OnCoalingTowerGather",
    "body": "void OnCoalingTowerGather(CoalingTower param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CoalingTower param1, Item param2"
  },
  "OnAnalysisComplete(SurveyCrater,BasePlayer)": {
    "prefix": "OnAnalysisComplete",
    "body": "void OnAnalysisComplete(SurveyCrater param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SurveyCrater param1, BasePlayer param2"
  },
  "OnBookmarkControl(ComputerStation,BasePlayer,string,IRemoteControllable)": {
    "prefix": "OnBookmarkControl",
    "body": "void OnBookmarkControl(ComputerStation param1, BasePlayer param2, string param3, IRemoteControllable param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ComputerStation param1, BasePlayer param2, string param3, IRemoteControllable param4"
  },
  "OnCollectiblePickedup(CollectibleEntity,BasePlayer,Item)": {
    "prefix": "OnCollectiblePickedup",
    "body": "void OnCollectiblePickedup(CollectibleEntity param1, BasePlayer param2, Item param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CollectibleEntity param1, BasePlayer param2, Item param3"
  },
  "CanAssignBed(BasePlayer,SleepingBag,ulong)": {
    "prefix": "CanAssignBed",
    "body": "void CanAssignBed(BasePlayer param1, SleepingBag param2, ulong param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, SleepingBag param2, ulong param3"
  },
  "CanSwapToSeat(BasePlayer,BaseMountable)": {
    "prefix": "CanSwapToSeat",
    "body": "void CanSwapToSeat(BasePlayer param1, BaseMountable param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseMountable param2"
  },
  "OnEntityDestroy(BradleyAPC)": {
    "prefix": "OnEntityDestroy",
    "body": "void OnEntityDestroy(BradleyAPC param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BradleyAPC param1"
  },
  "CanAcceptItem(ItemContainer,Item,int)": {
    "prefix": "CanAcceptItem",
    "body": "void CanAcceptItem(ItemContainer param1, Item param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemContainer param1, Item param2, int param3"
  },
  "OnItemSplit(Item,int)": {
    "prefix": "OnItemSplit",
    "body": "void OnItemSplit(Item param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, int param2"
  },
  "OnItemUpgrade(Item,Item,BasePlayer)": {
    "prefix": "OnItemUpgrade",
    "body": "void OnItemUpgrade(Item param1, Item param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, Item param2, BasePlayer param3"
  },
  "OnHelicopterDropDoorOpen(CH47HelicopterAIController)": {
    "prefix": "OnHelicopterDropDoorOpen",
    "body": "void OnHelicopterDropDoorOpen(CH47HelicopterAIController param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CH47HelicopterAIController param1"
  },
  "OnLootEntityEnd(BasePlayer,StorageContainer)": {
    "prefix": "OnLootEntityEnd",
    "body": "void OnLootEntityEnd(BasePlayer param1, StorageContainer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, StorageContainer param2"
  },
  "OnExperimentStarted(Workbench,BasePlayer)": {
    "prefix": "OnExperimentStarted",
    "body": "void OnExperimentStarted(Workbench param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Workbench param1, BasePlayer param2"
  },
  "OnItemCraft(IndustrialCrafter,ItemBlueprint)": {
    "prefix": "OnItemCraft",
    "body": "void OnItemCraft(IndustrialCrafter param1, ItemBlueprint param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IndustrialCrafter param1, ItemBlueprint param2"
  },
  "CanChangeCode(BasePlayer,CodeLock,string,bool)": {
    "prefix": "CanChangeCode",
    "body": "void CanChangeCode(BasePlayer param1, CodeLock param2, string param3, bool param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, CodeLock param2, string param3, bool param4"
  },
  "OnTurretStartup(AutoTurret)": {
    "prefix": "OnTurretStartup",
    "body": "void OnTurretStartup(AutoTurret param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1"
  },
  "OnEntityReskin(BaseEntity,ItemSkinDirectory.Skin,BasePlayer)": {
    "prefix": "OnEntityReskin",
    "body": "void OnEntityReskin(BaseEntity param1, ItemSkinDirectory.Skin param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, ItemSkinDirectory.Skin param2, BasePlayer param3"
  },
  "OnPlayerSpawn(BasePlayer,Network.Connection)": {
    "prefix": "OnPlayerSpawn",
    "body": "void OnPlayerSpawn(BasePlayer param1, Network.Connection param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Network.Connection param2"
  },
  "CanFastTrackCraftTask(ItemCrafter,ItemCraftTask,int)": {
    "prefix": "CanFastTrackCraftTask",
    "body": "void CanFastTrackCraftTask(ItemCrafter param1, ItemCraftTask param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemCrafter param1, ItemCraftTask param2, int param3"
  },
  "CanRenameBed(BasePlayer,SleepingBag,string)": {
    "prefix": "CanRenameBed",
    "body": "void CanRenameBed(BasePlayer param1, SleepingBag param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, SleepingBag param2, string param3"
  },
  "OnAirdrop(CargoPlane,UnityEngine.Vector3)": {
    "prefix": "OnAirdrop",
    "body": "void OnAirdrop(CargoPlane param1, UnityEngine.Vector3 param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CargoPlane param1, UnityEngine.Vector3 param2"
  },
  "CanFireLiquidWeapon(BasePlayer,LiquidWeapon)": {
    "prefix": "CanFireLiquidWeapon",
    "body": "void CanFireLiquidWeapon(BasePlayer param1, LiquidWeapon param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, LiquidWeapon param2"
  },
  "OnNetworkGroupLeft(BaseNetworkable,Network.Visibility.Group)": {
    "prefix": "OnNetworkGroupLeft",
    "body": "void OnNetworkGroupLeft(BaseNetworkable param1, Network.Visibility.Group param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNetworkable param1, Network.Visibility.Group param2"
  },
  "OnBigWheelLoss(BigWheelGame,Item,BigWheelBettingTerminal)": {
    "prefix": "OnBigWheelLoss",
    "body": "void OnBigWheelLoss(BigWheelGame param1, Item param2, BigWheelBettingTerminal param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BigWheelGame param1, Item param2, BigWheelBettingTerminal param3"
  },
  "CanAssignMission(BasePlayer,BaseMission,IMissionProvider)": {
    "prefix": "CanAssignMission",
    "body": "void CanAssignMission(BasePlayer param1, BaseMission param2, IMissionProvider param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseMission param2, IMissionProvider param3"
  },
  "CanLootEntity(BasePlayer,WorldItem)": {
    "prefix": "CanLootEntity",
    "body": "void CanLootEntity(BasePlayer param1, WorldItem param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, WorldItem param2"
  },
  "OnWeaponModChange(BaseProjectile,BasePlayer)": {
    "prefix": "OnWeaponModChange",
    "body": "void OnWeaponModChange(BaseProjectile param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseProjectile param1, BasePlayer param2"
  },
  "OnVehicleModulesAssigned(ModularCar,Rust.Modular.ItemModVehicleModule[])": {
    "prefix": "OnVehicleModulesAssigned",
    "body": "void OnVehicleModulesAssigned(ModularCar param1, Rust.Modular.ItemModVehicleModule[] param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ModularCar param1, Rust.Modular.ItemModVehicleModule[] param2"
  },
  "OnRackedWeaponSwap(Item,WeaponRackSlot,BasePlayer,WeaponRack)": {
    "prefix": "OnRackedWeaponSwap",
    "body": "void OnRackedWeaponSwap(Item param1, WeaponRackSlot param2, BasePlayer param3, WeaponRack param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, WeaponRackSlot param2, BasePlayer param3, WeaponRack param4"
  },
  "OnTakeCurrencyItem(NPCVendingMachine,Item)": {
    "prefix": "OnTakeCurrencyItem",
    "body": "void OnTakeCurrencyItem(NPCVendingMachine param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters NPCVendingMachine param1, Item param2"
  },
  "OnItemAction(Item,string,BasePlayer)": {
    "prefix": "OnItemAction",
    "body": "void OnItemAction(Item param1, string param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, string param2, BasePlayer param3"
  },
  "OnItemUnwrap(Item,BasePlayer,ItemModUnwrap)": {
    "prefix": "OnItemUnwrap",
    "body": "void OnItemUnwrap(Item param1, BasePlayer param2, ItemModUnwrap param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2, ItemModUnwrap param3"
  },
  "OnItemDeployed(Deployer,ItemModDeployable,BaseEntity)": {
    "prefix": "OnItemDeployed",
    "body": "void OnItemDeployed(Deployer param1, ItemModDeployable param2, BaseEntity param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Deployer param1, ItemModDeployable param2, BaseEntity param3"
  },
  "OnSwitchToggled(FuelGenerator,BasePlayer)": {
    "prefix": "OnSwitchToggled",
    "body": "void OnSwitchToggled(FuelGenerator param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters FuelGenerator param1, BasePlayer param2"
  },
  "OnMissionStarted(BaseMission,BaseMission.MissionInstance,BasePlayer)": {
    "prefix": "OnMissionStarted",
    "body": "void OnMissionStarted(BaseMission param1, BaseMission.MissionInstance param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseMission param1, BaseMission.MissionInstance param2, BasePlayer param3"
  },
  "OnMessagePlayer(string,BasePlayer)": {
    "prefix": "OnMessagePlayer",
    "body": "void OnMessagePlayer(string param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, BasePlayer param2"
  },
  "OnStashOcclude(StashContainer)": {
    "prefix": "OnStashOcclude",
    "body": "void OnStashOcclude(StashContainer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters StashContainer param1"
  },
  "OnFireBallSpread(FireBall,BaseEntity)": {
    "prefix": "OnFireBallSpread",
    "body": "void OnFireBallSpread(FireBall param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters FireBall param1, BaseEntity param2"
  },
  "OnRackedWeaponLoaded(Item,ItemDefinition,BasePlayer,WeaponRack)": {
    "prefix": "OnRackedWeaponLoaded",
    "body": "void OnRackedWeaponLoaded(Item param1, ItemDefinition param2, BasePlayer param3, WeaponRack param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, ItemDefinition param2, BasePlayer param3, WeaponRack param4"
  },
  "OnBoomboxStationValidate(string)": {
    "prefix": "OnBoomboxStationValidate",
    "body": "void OnBoomboxStationValidate(string param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1"
  },
  "OnPortalUse(BasePlayer,BasePortal)": {
    "prefix": "OnPortalUse",
    "body": "void OnPortalUse(BasePlayer param1, BasePortal param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePortal param2"
  },
  "OnTrapTrigger(BearTrap,UnityEngine.GameObject)": {
    "prefix": "OnTrapTrigger",
    "body": "void OnTrapTrigger(BearTrap param1, UnityEngine.GameObject param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BearTrap param1, UnityEngine.GameObject param2"
  },
  "OnRidableAnimalClaim(BaseRidableAnimal,BasePlayer,Item)": {
    "prefix": "OnRidableAnimalClaim",
    "body": "void OnRidableAnimalClaim(BaseRidableAnimal param1, BasePlayer param2, Item param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseRidableAnimal param1, BasePlayer param2, Item param3"
  },
  "OnWallpaperSet(BuildingBlock,ulong,int)": {
    "prefix": "OnWallpaperSet",
    "body": "void OnWallpaperSet(BuildingBlock param1, ulong param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingBlock param1, ulong param2, int param3"
  },
  "CanLock(BasePlayer,KeyLock)": {
    "prefix": "CanLock",
    "body": "void CanLock(BasePlayer param1, KeyLock param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, KeyLock param2"
  },
  "OnNpcDuck(HumanNPC)": {
    "prefix": "OnNpcDuck",
    "body": "void OnNpcDuck(HumanNPC param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HumanNPC param1"
  },
  "OnElevatorButtonPress(ElevatorLift,BasePlayer,Elevator.Direction,bool)": {
    "prefix": "OnElevatorButtonPress",
    "body": "void OnElevatorButtonPress(ElevatorLift param1, BasePlayer param2, Elevator.Direction param3, bool param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ElevatorLift param1, BasePlayer param2, Elevator.Direction param3, bool param4"
  },
  "OnTrapTrigger(Landmine,UnityEngine.GameObject)": {
    "prefix": "OnTrapTrigger",
    "body": "void OnTrapTrigger(Landmine param1, UnityEngine.GameObject param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Landmine param1, UnityEngine.GameObject param2"
  },
  "OnRidableAnimalClaimed(BaseRidableAnimal,BasePlayer)": {
    "prefix": "OnRidableAnimalClaimed",
    "body": "void OnRidableAnimalClaimed(BaseRidableAnimal param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseRidableAnimal param1, BasePlayer param2"
  },
  "OnTeamKick(RelationshipManager.PlayerTeam,BasePlayer,ulong)": {
    "prefix": "OnTeamKick",
    "body": "void OnTeamKick(RelationshipManager.PlayerTeam param1, BasePlayer param2, ulong param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RelationshipManager.PlayerTeam param1, BasePlayer param2, ulong param3"
  },
  "OnSpinWheel(BasePlayer,SpinnerWheel)": {
    "prefix": "OnSpinWheel",
    "body": "void OnSpinWheel(BasePlayer param1, SpinnerWheel param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, SpinnerWheel param2"
  },
  "CanBeTargeted(BasePlayer,FlameTurret)": {
    "prefix": "CanBeTargeted",
    "body": "void CanBeTargeted(BasePlayer param1, FlameTurret param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, FlameTurret param2"
  },
  "OnPlayerSpectateEnd(BasePlayer,string)": {
    "prefix": "OnPlayerSpectateEnd",
    "body": "void OnPlayerSpectateEnd(BasePlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2"
  },
  "CanUseVending(BasePlayer,VendingMachine)": {
    "prefix": "CanUseVending",
    "body": "void CanUseVending(BasePlayer param1, VendingMachine param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, VendingMachine param2"
  },
  "OnServerInitialize()": {
    "prefix": "OnServerInitialize",
    "body": "void OnServerInitialize()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "IOnEntitySaved(BaseNetworkable,BaseNetworkable.SaveInfo)": {
    "prefix": "IOnEntitySaved",
    "body": "void IOnEntitySaved(BaseNetworkable param1, BaseNetworkable.SaveInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNetworkable param1, BaseNetworkable.SaveInfo param2"
  },
  "OnTeamDisbanded(RelationshipManager.PlayerTeam)": {
    "prefix": "OnTeamDisbanded",
    "body": "void OnTeamDisbanded(RelationshipManager.PlayerTeam param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RelationshipManager.PlayerTeam param1"
  },
  "OnHorseUnhitch(RidableHorse,HitchTrough.HitchSpot)": {
    "prefix": "OnHorseUnhitch",
    "body": "void OnHorseUnhitch(RidableHorse param1, HitchTrough.HitchSpot param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RidableHorse param1, HitchTrough.HitchSpot param2"
  },
  "OnMissionAssigned(BaseMission,IMissionProvider,BasePlayer)": {
    "prefix": "OnMissionAssigned",
    "body": "void OnMissionAssigned(BaseMission param1, IMissionProvider param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseMission param1, IMissionProvider param2, BasePlayer param3"
  },
  "OnVehiclePush(BaseVehicle,BasePlayer)": {
    "prefix": "OnVehiclePush",
    "body": "void OnVehiclePush(BaseVehicle param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseVehicle param1, BasePlayer param2"
  },
  "OnRefreshVendingStock(VendingMachine,ItemDefinition)": {
    "prefix": "OnRefreshVendingStock",
    "body": "void OnRefreshVendingStock(VendingMachine param1, ItemDefinition param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, ItemDefinition param2"
  },
  "OnRfListenerAdded(IRFObject,int)": {
    "prefix": "OnRfListenerAdded",
    "body": "void OnRfListenerAdded(IRFObject param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IRFObject param1, int param2"
  },
  "OnTreeMarkerHit(TreeEntity,HitInfo)": {
    "prefix": "OnTreeMarkerHit",
    "body": "void OnTreeMarkerHit(TreeEntity param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TreeEntity param1, HitInfo param2"
  },
  "OnShopAcceptClick(ShopFront,BasePlayer)": {
    "prefix": "OnShopAcceptClick",
    "body": "void OnShopAcceptClick(ShopFront param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ShopFront param1, BasePlayer param2"
  },
  "OnEngineLoadoutRefresh(Rust.Modular.EngineStorage)": {
    "prefix": "OnEngineLoadoutRefresh",
    "body": "void OnEngineLoadoutRefresh(Rust.Modular.EngineStorage param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Rust.Modular.EngineStorage param1"
  },
  "OnItemRecycle(Item,Recycler)": {
    "prefix": "OnItemRecycle",
    "body": "void OnItemRecycle(Item param1, Recycler param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, Recycler param2"
  },
  "CanCraft(ItemCrafter,ItemBlueprint,int,bool)": {
    "prefix": "CanCraft",
    "body": "void CanCraft(ItemCrafter param1, ItemBlueprint param2, int param3, bool param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemCrafter param1, ItemBlueprint param2, int param3, bool param4"
  },
  "OnServerUserRemove(ulong)": {
    "prefix": "OnServerUserRemove",
    "body": "void OnServerUserRemove(ulong param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ulong param1"
  },
  "CanUseLockedEntity(BasePlayer,KeyLock)": {
    "prefix": "CanUseLockedEntity",
    "body": "void CanUseLockedEntity(BasePlayer param1, KeyLock param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, KeyLock param2"
  },
  "OnElevatorCall(Elevator,Elevator)": {
    "prefix": "OnElevatorCall",
    "body": "void OnElevatorCall(Elevator param1, Elevator param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Elevator param1, Elevator param2"
  },
  "OnBookmarkControlEnd(ComputerStation,BasePlayer,BaseEntity)": {
    "prefix": "OnBookmarkControlEnd",
    "body": "void OnBookmarkControlEnd(ComputerStation param1, BasePlayer param2, BaseEntity param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ComputerStation param1, BasePlayer param2, BaseEntity param3"
  },
  "OnCounterModeToggle(PowerCounter,BasePlayer,bool)": {
    "prefix": "OnCounterModeToggle",
    "body": "void OnCounterModeToggle(PowerCounter param1, BasePlayer param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PowerCounter param1, BasePlayer param2, bool param3"
  },
  "CanHideStash(BasePlayer,StashContainer)": {
    "prefix": "CanHideStash",
    "body": "void CanHideStash(BasePlayer param1, StashContainer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, StashContainer param2"
  },
  "OnPlayerDismountFailed(BasePlayer,BaseMountable)": {
    "prefix": "OnPlayerDismountFailed",
    "body": "void OnPlayerDismountFailed(BasePlayer param1, BaseMountable param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseMountable param2"
  },
  "OnItemPickup(Item,BasePlayer)": {
    "prefix": "OnItemPickup",
    "body": "void OnItemPickup(Item param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2"
  },
  "OnTurretDeauthorize(AutoTurret,BasePlayer)": {
    "prefix": "OnTurretDeauthorize",
    "body": "void OnTurretDeauthorize(AutoTurret param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, BasePlayer param2"
  },
  "OnItemDespawn(Item)": {
    "prefix": "OnItemDespawn",
    "body": "void OnItemDespawn(Item param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1"
  },
  "OnNpcTarget(HumanNPC,BaseEntity)": {
    "prefix": "OnNpcTarget",
    "body": "void OnNpcTarget(HumanNPC param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HumanNPC param1, BaseEntity param2"
  },
  "OnSprayCreate(SprayCan,UnityEngine.Vector3,UnityEngine.Quaternion)": {
    "prefix": "OnSprayCreate",
    "body": "void OnSprayCreate(SprayCan param1, UnityEngine.Vector3 param2, UnityEngine.Quaternion param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SprayCan param1, UnityEngine.Vector3 param2, UnityEngine.Quaternion param3"
  },
  "CanUpdateSign(BasePlayer,Signage)": {
    "prefix": "CanUpdateSign",
    "body": "void CanUpdateSign(BasePlayer param1, Signage param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Signage param2"
  },
  "OnPlayerRespawn(BasePlayer,SleepingBag)": {
    "prefix": "OnPlayerRespawn",
    "body": "void OnPlayerRespawn(BasePlayer param1, SleepingBag param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, SleepingBag param2"
  },
  "CanUnlockTechTreeNodePath(BasePlayer,TechTreeData.NodeInstance,TechTreeData)": {
    "prefix": "CanUnlockTechTreeNodePath",
    "body": "void CanUnlockTechTreeNodePath(BasePlayer param1, TechTreeData.NodeInstance param2, TechTreeData param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, TechTreeData.NodeInstance param2, TechTreeData param3"
  },
  "OnRackedWeaponSwapped(Item,WeaponRackSlot,BasePlayer,WeaponRack)": {
    "prefix": "OnRackedWeaponSwapped",
    "body": "void OnRackedWeaponSwapped(Item param1, WeaponRackSlot param2, BasePlayer param3, WeaponRack param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, WeaponRackSlot param2, BasePlayer param3, WeaponRack param4"
  },
  "OnEntityReskinned(BaseEntity,ItemSkinDirectory.Skin,BasePlayer)": {
    "prefix": "OnEntityReskinned",
    "body": "void OnEntityReskinned(BaseEntity param1, ItemSkinDirectory.Skin param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, ItemSkinDirectory.Skin param2, BasePlayer param3"
  },
  "OnPlayerDig(BasePlayer,BaseDiggableEntity)": {
    "prefix": "OnPlayerDig",
    "body": "void OnPlayerDig(BasePlayer param1, BaseDiggableEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BaseDiggableEntity param2"
  },
  "OnRandomItemAward(RandomItemDispenser,RandomItemDispenser.RandomItemChance,BasePlayer,UnityEngine.Vector3)": {
    "prefix": "OnRandomItemAward",
    "body": "void OnRandomItemAward(RandomItemDispenser param1, RandomItemDispenser.RandomItemChance param2, BasePlayer param3, UnityEngine.Vector3 param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RandomItemDispenser param1, RandomItemDispenser.RandomItemChance param2, BasePlayer param3, UnityEngine.Vector3 param4"
  },
  "OnPlayerAddModifiers(BasePlayer,Item,ItemModConsumable)": {
    "prefix": "OnPlayerAddModifiers",
    "body": "void OnPlayerAddModifiers(BasePlayer param1, Item param2, ItemModConsumable param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Item param2, ItemModConsumable param3"
  },
  "OnStructureUpgraded(BuildingBlock,BasePlayer,BuildingGrade.Enum,ulong)": {
    "prefix": "OnStructureUpgraded",
    "body": "void OnStructureUpgraded(BuildingBlock param1, BasePlayer param2, BuildingGrade.Enum param3, ulong param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingBlock param1, BasePlayer param2, BuildingGrade.Enum param3, ulong param4"
  },
  "CanSeeStash(BasePlayer,StashContainer)": {
    "prefix": "CanSeeStash",
    "body": "void CanSeeStash(BasePlayer param1, StashContainer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, StashContainer param2"
  },
  "OnDeleteVendingOffer(VendingMachine,int)": {
    "prefix": "OnDeleteVendingOffer",
    "body": "void OnDeleteVendingOffer(VendingMachine param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, int param2"
  },
  "OnIORefCleared(IOEntity.IORef,IOEntity)": {
    "prefix": "OnIORefCleared",
    "body": "void OnIORefCleared(IOEntity.IORef param1, IOEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IOEntity.IORef param1, IOEntity param2"
  },
  "OnPlayerRespawn(BasePlayer,BasePlayer.SpawnPoint)": {
    "prefix": "OnPlayerRespawn",
    "body": "void OnPlayerRespawn(BasePlayer param1, BasePlayer.SpawnPoint param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer.SpawnPoint param2"
  },
  "OnWeaponReload(BaseProjectile,BasePlayer)": {
    "prefix": "OnWeaponReload",
    "body": "void OnWeaponReload(BaseProjectile param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseProjectile param1, BasePlayer param2"
  },
  "OnServerMessage(string,string,string,ulong)": {
    "prefix": "OnServerMessage",
    "body": "void OnServerMessage(string param1, string param2, string param3, ulong param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, string param2, string param3, ulong param4"
  },
  "OnCrateHackEnd(HackableLockedCrate)": {
    "prefix": "OnCrateHackEnd",
    "body": "void OnCrateHackEnd(HackableLockedCrate param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HackableLockedCrate param1"
  },
  "OnMeleeThrown(BasePlayer,Item)": {
    "prefix": "OnMeleeThrown",
    "body": "void OnMeleeThrown(BasePlayer param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Item param2"
  },
  "OnEntityDistanceCheck(BaseEntity,BasePlayer,uint,string,float,bool)": {
    "prefix": "OnEntityDistanceCheck",
    "body": "void OnEntityDistanceCheck(BaseEntity param1, BasePlayer param2, uint param3, string param4, float param5, bool param6)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, BasePlayer param2, uint param3, string param4, float param5, bool param6"
  },
  "OnMapMarkerAdded(BasePlayer,ProtoBuf.MapNote)": {
    "prefix": "OnMapMarkerAdded",
    "body": "void OnMapMarkerAdded(BasePlayer param1, ProtoBuf.MapNote param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ProtoBuf.MapNote param2"
  },
  "OnDemoRecordingStop(string,BasePlayer)": {
    "prefix": "OnDemoRecordingStop",
    "body": "void OnDemoRecordingStop(string param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, BasePlayer param2"
  },
  "OnRfFrequencyChange(Detonator,int,BasePlayer)": {
    "prefix": "OnRfFrequencyChange",
    "body": "void OnRfFrequencyChange(Detonator param1, int param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Detonator param1, int param2, BasePlayer param3"
  },
  "OnDefaultItemsReceive(PlayerInventory)": {
    "prefix": "OnDefaultItemsReceive",
    "body": "void OnDefaultItemsReceive(PlayerInventory param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1"
  },
  "OnWaterPurify(WaterPurifier,float)": {
    "prefix": "OnWaterPurify",
    "body": "void OnWaterPurify(WaterPurifier param1, float param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters WaterPurifier param1, float param2"
  },
  "OnCupboardDeauthorize(BuildingPrivlidge,BasePlayer)": {
    "prefix": "OnCupboardDeauthorize",
    "body": "void OnCupboardDeauthorize(BuildingPrivlidge param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingPrivlidge param1, BasePlayer param2"
  },
  "CanBeWounded(BasePlayer,HitInfo)": {
    "prefix": "CanBeWounded",
    "body": "void CanBeWounded(BasePlayer param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HitInfo param2"
  },
  "OnItemRecycleAmount(Item,int,Recycler)": {
    "prefix": "OnItemRecycleAmount",
    "body": "void OnItemRecycleAmount(Item param1, int param2, Recycler param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, int param2, Recycler param3"
  },
  "OnQueueMessage(Network.Connection,int)": {
    "prefix": "OnQueueMessage",
    "body": "void OnQueueMessage(Network.Connection param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1, int param2"
  },
  "OnEntityGroundMissing(BaseEntity)": {
    "prefix": "OnEntityGroundMissing",
    "body": "void OnEntityGroundMissing(BaseEntity param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1"
  },
  "OnWindmillUpdated(ElectricWindmill)": {
    "prefix": "OnWindmillUpdated",
    "body": "void OnWindmillUpdated(ElectricWindmill param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ElectricWindmill param1"
  },
  "OnEntityBuilt(Planner,UnityEngine.GameObject)": {
    "prefix": "OnEntityBuilt",
    "body": "void OnEntityBuilt(Planner param1, UnityEngine.GameObject param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Planner param1, UnityEngine.GameObject param2"
  },
  "OnDispenserBonus(ResourceDispenser,BasePlayer,Item)": {
    "prefix": "OnDispenserBonus",
    "body": "void OnDispenserBonus(ResourceDispenser param1, BasePlayer param2, Item param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ResourceDispenser param1, BasePlayer param2, Item param3"
  },
  "OnBookmarksSendControl(ComputerStation,BasePlayer,string)": {
    "prefix": "OnBookmarksSendControl",
    "body": "void OnBookmarksSendControl(ComputerStation param1, BasePlayer param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ComputerStation param1, BasePlayer param2, string param3"
  },
  "OnEntityFlagsNetworkUpdate(BaseEntity)": {
    "prefix": "OnEntityFlagsNetworkUpdate",
    "body": "void OnEntityFlagsNetworkUpdate(BaseEntity param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1"
  },
  "OnWireClear(BasePlayer,IOEntity,int,IOEntity,bool)": {
    "prefix": "OnWireClear",
    "body": "void OnWireClear(BasePlayer param1, IOEntity param2, int param3, IOEntity param4, bool param5)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, IOEntity param2, int param3, IOEntity param4, bool param5"
  },
  "OnEntityControl(PoweredRemoteControlEntity,ulong)": {
    "prefix": "OnEntityControl",
    "body": "void OnEntityControl(PoweredRemoteControlEntity param1, ulong param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PoweredRemoteControlEntity param1, ulong param2"
  },
  "OnLockRemove(ModularCar,BasePlayer)": {
    "prefix": "OnLockRemove",
    "body": "void OnLockRemove(ModularCar param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ModularCar param1, BasePlayer param2"
  },
  "OnBroadcastCommand(string,object[])": {
    "prefix": "OnBroadcastCommand",
    "body": "void OnBroadcastCommand(string param1, object[] param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, object[] param2"
  },
  "OnLiftUse(ProceduralLift,BasePlayer)": {
    "prefix": "OnLiftUse",
    "body": "void OnLiftUse(ProceduralLift param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ProceduralLift param1, BasePlayer param2"
  },
  "CanUnlock(BasePlayer,CodeLock)": {
    "prefix": "CanUnlock",
    "body": "void CanUnlock(BasePlayer param1, CodeLock param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, CodeLock param2"
  },
  "OnComposterUpdate(Composter)": {
    "prefix": "OnComposterUpdate",
    "body": "void OnComposterUpdate(Composter param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Composter param1"
  },
  "OnRfFrequencyChanged(RFBroadcaster,int,BasePlayer)": {
    "prefix": "OnRfFrequencyChanged",
    "body": "void OnRfFrequencyChanged(RFBroadcaster param1, int param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RFBroadcaster param1, int param2, BasePlayer param3"
  },
  "OnPlayerDropActiveItem(BasePlayer,Item)": {
    "prefix": "OnPlayerDropActiveItem",
    "body": "void OnPlayerDropActiveItem(BasePlayer param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Item param2"
  },
  "OnTakeCurrencyItem(VendingMachine,Item)": {
    "prefix": "OnTakeCurrencyItem",
    "body": "void OnTakeCurrencyItem(VendingMachine param1, Item param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VendingMachine param1, Item param2"
  },
  "OnXmasGiftsDistribute(XMasRefill,BasePlayer)": {
    "prefix": "OnXmasGiftsDistribute",
    "body": "void OnXmasGiftsDistribute(XMasRefill param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters XMasRefill param1, BasePlayer param2"
  },
  "OnFuelItemCheck(EntityFuelSystem,StorageContainer)": {
    "prefix": "OnFuelItemCheck",
    "body": "void OnFuelItemCheck(EntityFuelSystem param1, StorageContainer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters EntityFuelSystem param1, StorageContainer param2"
  },
  "OnItemRefill(Item,BasePlayer)": {
    "prefix": "OnItemRefill",
    "body": "void OnItemRefill(Item param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2"
  },
  "OnRackedWeaponUnloaded(Item,BasePlayer,WeaponRack)": {
    "prefix": "OnRackedWeaponUnloaded",
    "body": "void OnRackedWeaponUnloaded(Item param1, BasePlayer param2, WeaponRack param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, BasePlayer param2, WeaponRack param3"
  },
  "OnRunPlayerMetabolism(PlayerMetabolism,BaseCombatEntity,float)": {
    "prefix": "OnRunPlayerMetabolism",
    "body": "void OnRunPlayerMetabolism(PlayerMetabolism param1, BaseCombatEntity param2, float param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerMetabolism param1, BaseCombatEntity param2, float param3"
  },
  "OnMlrsTarget(MLRS,UnityEngine.Vector3,BasePlayer)": {
    "prefix": "OnMlrsTarget",
    "body": "void OnMlrsTarget(MLRS param1, UnityEngine.Vector3 param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MLRS param1, UnityEngine.Vector3 param2, BasePlayer param3"
  },
  "OnHelicopterOutOfCrates(CH47HelicopterAIController)": {
    "prefix": "OnHelicopterOutOfCrates",
    "body": "void OnHelicopterOutOfCrates(CH47HelicopterAIController param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CH47HelicopterAIController param1"
  },
  "OnNpcAlert(ScientistNPC)": {
    "prefix": "OnNpcAlert",
    "body": "void OnNpcAlert(ScientistNPC param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ScientistNPC param1"
  },
  "OnCupboardClearList(BuildingPrivlidge,BasePlayer)": {
    "prefix": "OnCupboardClearList",
    "body": "void OnCupboardClearList(BuildingPrivlidge param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingPrivlidge param1, BasePlayer param2"
  },
  "OnInterferenceUpdate(AutoTurret)": {
    "prefix": "OnInterferenceUpdate",
    "body": "void OnInterferenceUpdate(AutoTurret param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1"
  },
  "OnIngredientsCollect(ItemCrafter,ItemBlueprint,ItemCraftTask,int,BasePlayer)": {
    "prefix": "OnIngredientsCollect",
    "body": "void OnIngredientsCollect(ItemCrafter param1, ItemBlueprint param2, ItemCraftTask param3, int param4, BasePlayer param5)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemCrafter param1, ItemBlueprint param2, ItemCraftTask param3, int param4, BasePlayer param5"
  },
  "OnEngineStatsRefresh(VehicleModuleEngine,Rust.Modular.EngineStorage)": {
    "prefix": "OnEngineStatsRefresh",
    "body": "void OnEngineStatsRefresh(VehicleModuleEngine param1, Rust.Modular.EngineStorage param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VehicleModuleEngine param1, Rust.Modular.EngineStorage param2"
  },
  "OnCounterTargetChange(PowerCounter,BasePlayer,int)": {
    "prefix": "OnCounterTargetChange",
    "body": "void OnCounterTargetChange(PowerCounter param1, BasePlayer param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PowerCounter param1, BasePlayer param2, int param3"
  },
  "CanSwapToSeat(BasePlayer,ModularCarSeat)": {
    "prefix": "CanSwapToSeat",
    "body": "void CanSwapToSeat(BasePlayer param1, ModularCarSeat param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, ModularCarSeat param2"
  },
  "OnHuntEventStart(EggHuntEvent)": {
    "prefix": "OnHuntEventStart",
    "body": "void OnHuntEventStart(EggHuntEvent param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters EggHuntEvent param1"
  },
  "OnVehicleModuleSelected(Item,ModularCarGarage,BasePlayer)": {
    "prefix": "OnVehicleModuleSelected",
    "body": "void OnVehicleModuleSelected(Item param1, ModularCarGarage param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, ModularCarGarage param2, BasePlayer param3"
  },
  "OnPlayerReported(BasePlayer,string,string,string,string,string)": {
    "prefix": "OnPlayerReported",
    "body": "void OnPlayerReported(BasePlayer param1, string param2, string param3, string param4, string param5, string param6)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2, string param3, string param4, string param5, string param6"
  },
  "OnPhotoCapture(PhotoEntity,Item,BasePlayer,byte[])": {
    "prefix": "OnPhotoCapture",
    "body": "void OnPhotoCapture(PhotoEntity param1, Item param2, BasePlayer param3, byte[] param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhotoEntity param1, Item param2, BasePlayer param3, byte[] param4"
  },
  "CanExplosiveStick(TimedExplosive,BaseEntity)": {
    "prefix": "CanExplosiveStick",
    "body": "void CanExplosiveStick(TimedExplosive param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters TimedExplosive param1, BaseEntity param2"
  },
  "OnVehicleLockableCheck(ModularCarCodeLock)": {
    "prefix": "OnVehicleLockableCheck",
    "body": "void OnVehicleLockableCheck(ModularCarCodeLock param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ModularCarCodeLock param1"
  },
  "CanAdministerVending(BasePlayer,VendingMachine)": {
    "prefix": "CanAdministerVending",
    "body": "void CanAdministerVending(BasePlayer param1, VendingMachine param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, VendingMachine param2"
  },
  "OnSwitchToggled(ElectricSwitch,BasePlayer)": {
    "prefix": "OnSwitchToggled",
    "body": "void OnSwitchToggled(ElectricSwitch param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ElectricSwitch param1, BasePlayer param2"
  },
  "OnDoorClosed(Door,BasePlayer)": {
    "prefix": "OnDoorClosed",
    "body": "void OnDoorClosed(Door param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Door param1, BasePlayer param2"
  },
  "OnItemResearched(ResearchTable,int)": {
    "prefix": "OnItemResearched",
    "body": "void OnItemResearched(ResearchTable param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ResearchTable param1, int param2"
  },
  "IOnPlayerChat(ulong,string,string,ConVar.Chat.ChatChannel,BasePlayer)": {
    "prefix": "IOnPlayerChat",
    "body": "void IOnPlayerChat(ulong param1, string param2, string param3, ConVar.Chat.ChatChannel param4, BasePlayer param5)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ulong param1, string param2, string param3, ConVar.Chat.ChatChannel param4, BasePlayer param5"
  },
  "OnPhotoCaptured(PhotoEntity,Item,BasePlayer,byte[])": {
    "prefix": "OnPhotoCaptured",
    "body": "void OnPhotoCaptured(PhotoEntity param1, Item param2, BasePlayer param3, byte[] param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhotoEntity param1, Item param2, BasePlayer param3, byte[] param4"
  },
  "OnRemoveDying(GrowableEntity,BasePlayer)": {
    "prefix": "OnRemoveDying",
    "body": "void OnRemoveDying(GrowableEntity param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters GrowableEntity param1, BasePlayer param2"
  },
  "OnPlayerAttack(BasePlayer,HitInfo)": {
    "prefix": "OnPlayerAttack",
    "body": "void OnPlayerAttack(BasePlayer param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HitInfo param2"
  },
  "OnMlrsFired(MLRS,BasePlayer)": {
    "prefix": "OnMlrsFired",
    "body": "void OnMlrsFired(MLRS param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MLRS param1, BasePlayer param2"
  },
  "CanUseLockedEntity(BasePlayer,CodeLock)": {
    "prefix": "CanUseLockedEntity",
    "body": "void CanUseLockedEntity(BasePlayer param1, CodeLock param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, CodeLock param2"
  },
  "OnPlayerLootEnd(PlayerLoot)": {
    "prefix": "OnPlayerLootEnd",
    "body": "void OnPlayerLootEnd(PlayerLoot param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerLoot param1"
  },
  "CanBeHomingTargeted(AttackHeliPilotFlare)": {
    "prefix": "CanBeHomingTargeted",
    "body": "void CanBeHomingTargeted(AttackHeliPilotFlare param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AttackHeliPilotFlare param1"
  },
  "OnRemoteIdentifierUpdate(PoweredRemoteControlEntity,string)": {
    "prefix": "OnRemoteIdentifierUpdate",
    "body": "void OnRemoteIdentifierUpdate(PoweredRemoteControlEntity param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PoweredRemoteControlEntity param1, string param2"
  },
  "OnEntitySnapshot(BaseNetworkable,Network.Connection)": {
    "prefix": "OnEntitySnapshot",
    "body": "void OnEntitySnapshot(BaseNetworkable param1, Network.Connection param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNetworkable param1, Network.Connection param2"
  },
  "OnTurretIdentifierSet(AutoTurret,BasePlayer,string)": {
    "prefix": "OnTurretIdentifierSet",
    "body": "void OnTurretIdentifierSet(AutoTurret param1, BasePlayer param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters AutoTurret param1, BasePlayer param2, string param3"
  },
  "OnPlayerKeepAlive(BasePlayer,BasePlayer)": {
    "prefix": "OnPlayerKeepAlive",
    "body": "void OnPlayerKeepAlive(BasePlayer param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer param2"
  },
  "OnQuarryToggle(MiningQuarry,BasePlayer)": {
    "prefix": "OnQuarryToggle",
    "body": "void OnQuarryToggle(MiningQuarry param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MiningQuarry param1, BasePlayer param2"
  },
  "OnCargoPlaneSignaled(BaseEntity,SupplySignal)": {
    "prefix": "OnCargoPlaneSignaled",
    "body": "void OnCargoPlaneSignaled(BaseEntity param1, SupplySignal param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, SupplySignal param2"
  },
  "OnBigWheelWin(BigWheelGame,Item,BigWheelBettingTerminal,int)": {
    "prefix": "OnBigWheelWin",
    "body": "void OnBigWheelWin(BigWheelGame param1, Item param2, BigWheelBettingTerminal param3, int param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BigWheelGame param1, Item param2, BigWheelBettingTerminal param3, int param4"
  },
  "CanEntityBeHostile(BasePlayer)": {
    "prefix": "CanEntityBeHostile",
    "body": "void CanEntityBeHostile(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnSamSiteModeToggle(SamSite,BasePlayer,bool)": {
    "prefix": "OnSamSiteModeToggle",
    "body": "void OnSamSiteModeToggle(SamSite param1, BasePlayer param2, bool param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SamSite param1, BasePlayer param2, bool param3"
  },
  "OnHelicopterAttack(CH47HelicopterAIController,HitInfo)": {
    "prefix": "OnHelicopterAttack",
    "body": "void OnHelicopterAttack(CH47HelicopterAIController param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CH47HelicopterAIController param1, HitInfo param2"
  },
  "OnSleepingBagDestroyed(SleepingBag,ulong)": {
    "prefix": "OnSleepingBagDestroyed",
    "body": "void OnSleepingBagDestroyed(SleepingBag param1, ulong param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters SleepingBag param1, ulong param2"
  },
  "CanAdministerVending(BasePlayer,NPCVendingMachine)": {
    "prefix": "CanAdministerVending",
    "body": "void CanAdministerVending(BasePlayer param1, NPCVendingMachine param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, NPCVendingMachine param2"
  },
  "OnHelicopterTarget(HelicopterTurret,BaseCombatEntity)": {
    "prefix": "OnHelicopterTarget",
    "body": "void OnHelicopterTarget(HelicopterTurret param1, BaseCombatEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HelicopterTurret param1, BaseCombatEntity param2"
  },
  "OnFishCaught(ItemDefinition,BaseFishingRod,BasePlayer)": {
    "prefix": "OnFishCaught",
    "body": "void OnFishCaught(ItemDefinition param1, BaseFishingRod param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemDefinition param1, BaseFishingRod param2, BasePlayer param3"
  },
  "CanCreateWorldProjectile(HitInfo,ItemDefinition)": {
    "prefix": "CanCreateWorldProjectile",
    "body": "void CanCreateWorldProjectile(HitInfo param1, ItemDefinition param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters HitInfo param1, ItemDefinition param2"
  },
  "OnInventoryItemsCount(PlayerInventory,int)": {
    "prefix": "OnInventoryItemsCount",
    "body": "void OnInventoryItemsCount(PlayerInventory param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, int param2"
  },
  "OnMlrsRocketFired(MLRS,ServerProjectile)": {
    "prefix": "OnMlrsRocketFired",
    "body": "void OnMlrsRocketFired(MLRS param1, ServerProjectile param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters MLRS param1, ServerProjectile param2"
  },
  "OnBackpackDrop(Item,PlayerInventory)": {
    "prefix": "OnBackpackDrop",
    "body": "void OnBackpackDrop(Item param1, PlayerInventory param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Item param1, PlayerInventory param2"
  },
  "CanDemolish(BasePlayer,StabilityEntity)": {
    "prefix": "CanDemolish",
    "body": "void CanDemolish(BasePlayer param1, StabilityEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, StabilityEntity param2"
  },
  "OnEntityVisibilityCheck(BaseEntity,BasePlayer,uint,string,float)": {
    "prefix": "OnEntityVisibilityCheck",
    "body": "void OnEntityVisibilityCheck(BaseEntity param1, BasePlayer param2, uint param3, string param4, float param5)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseEntity param1, BasePlayer param2, uint param3, string param4, float param5"
  },
  "OnScientistRecalled(BradleyAPC,ScientistNPC)": {
    "prefix": "OnScientistRecalled",
    "body": "void OnScientistRecalled(BradleyAPC param1, ScientistNPC param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BradleyAPC param1, ScientistNPC param2"
  },
  "CanUpdateSign(BasePlayer,CarvablePumpkin)": {
    "prefix": "CanUpdateSign",
    "body": "void CanUpdateSign(BasePlayer param1, CarvablePumpkin param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, CarvablePumpkin param2"
  },
  "OnExperimentStart(Workbench,BasePlayer)": {
    "prefix": "OnExperimentStart",
    "body": "void OnExperimentStart(Workbench param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Workbench param1, BasePlayer param2"
  },
  "OnItemPainted(PaintedItemStorageEntity,Item,BasePlayer,byte[])": {
    "prefix": "OnItemPainted",
    "body": "void OnItemPainted(PaintedItemStorageEntity param1, Item param2, BasePlayer param3, byte[] param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PaintedItemStorageEntity param1, Item param2, BasePlayer param3, byte[] param4"
  },
  "CanSetRelationship(BasePlayer,BasePlayer,RelationshipManager.RelationshipType,int)": {
    "prefix": "CanSetRelationship",
    "body": "void CanSetRelationship(BasePlayer param1, BasePlayer param2, RelationshipManager.RelationshipType param3, int param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, BasePlayer param2, RelationshipManager.RelationshipType param3, int param4"
  },
  "OnPlayerSleepEnd(BasePlayer)": {
    "prefix": "OnPlayerSleepEnd",
    "body": "void OnPlayerSleepEnd(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnRfFrequencyChange(RFReceiver,int,BasePlayer)": {
    "prefix": "OnRfFrequencyChange",
    "body": "void OnRfFrequencyChange(RFReceiver param1, int param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RFReceiver param1, int param2, BasePlayer param3"
  },
  "OnMissionStart(BaseMission,BaseMission.MissionInstance,BasePlayer)": {
    "prefix": "OnMissionStart",
    "body": "void OnMissionStart(BaseMission param1, BaseMission.MissionInstance param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseMission param1, BaseMission.MissionInstance param2, BasePlayer param3"
  },
  "CanBuild(Planner,Construction,Construction.Target)": {
    "prefix": "CanBuild",
    "body": "void CanBuild(Planner param1, Construction param2, Construction.Target param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Planner param1, Construction param2, Construction.Target param3"
  },
  "OnInventoryNetworkUpdate(PlayerInventory,ItemContainer,ProtoBuf.UpdateItemContainer,PlayerInventory.Type,PlayerInventory.NetworkInventoryMode)": {
    "prefix": "OnInventoryNetworkUpdate",
    "body": "void OnInventoryNetworkUpdate(PlayerInventory param1, ItemContainer param2, ProtoBuf.UpdateItemContainer param3, PlayerInventory.Type param4, PlayerInventory.NetworkInventoryMode param5)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PlayerInventory param1, ItemContainer param2, ProtoBuf.UpdateItemContainer param3, PlayerInventory.Type param4, PlayerInventory.NetworkInventoryMode param5"
  },
  "OnTeamDisband(RelationshipManager.PlayerTeam)": {
    "prefix": "OnTeamDisband",
    "body": "void OnTeamDisband(RelationshipManager.PlayerTeam param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters RelationshipManager.PlayerTeam param1"
  },
  "CanCheckFuel(EntityFuelSystem,StorageContainer,BasePlayer)": {
    "prefix": "CanCheckFuel",
    "body": "void CanCheckFuel(EntityFuelSystem param1, StorageContainer param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters EntityFuelSystem param1, StorageContainer param2, BasePlayer param3"
  },
  "CanBeHomingTargeted(CH47Helicopter)": {
    "prefix": "CanBeHomingTargeted",
    "body": "void CanBeHomingTargeted(CH47Helicopter param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters CH47Helicopter param1"
  },
  "OnEntityDismounted(BaseMountable,BasePlayer)": {
    "prefix": "OnEntityDismounted",
    "body": "void OnEntityDismounted(BaseMountable param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseMountable param1, BasePlayer param2"
  },
  "OnActiveItemChanged(BasePlayer,Item,Item)": {
    "prefix": "OnActiveItemChanged",
    "body": "void OnActiveItemChanged(BasePlayer param1, Item param2, Item param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, Item param2, Item param3"
  },
  "OnSendCommand(System.Collections.Generic.List<Network.Connection>,string,object[])": {
    "prefix": "OnSendCommand",
    "body": "void OnSendCommand(System.Collections.Generic.List<Network.Connection> param1, string param2, object[] param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters System.Collections.Generic.List<Network.Connection> param1, string param2, object[] param3"
  },
  "IOnServerShutdown()": {
    "prefix": "IOnServerShutdown",
    "body": "void IOnServerShutdown()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "OnDecayHeal(DecayEntity)": {
    "prefix": "OnDecayHeal",
    "body": "void OnDecayHeal(DecayEntity param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters DecayEntity param1"
  },
  "OnItemCraftCancelled(ItemCraftTask,ItemCrafter)": {
    "prefix": "OnItemCraftCancelled",
    "body": "void OnItemCraftCancelled(ItemCraftTask param1, ItemCrafter param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ItemCraftTask param1, ItemCrafter param2"
  },
  "OnConveyorFiltersChange(IndustrialConveyor,BasePlayer,ProtoBuf.IndustrialConveyor.ItemFilterList)": {
    "prefix": "OnConveyorFiltersChange",
    "body": "void OnConveyorFiltersChange(IndustrialConveyor param1, BasePlayer param2, ProtoBuf.IndustrialConveyor.ItemFilterList param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters IndustrialConveyor param1, BasePlayer param2, ProtoBuf.IndustrialConveyor.ItemFilterList param3"
  },
  "OnPhoneDialTimedOut(PhoneController,PhoneController,BasePlayer)": {
    "prefix": "OnPhoneDialTimedOut",
    "body": "void OnPhoneDialTimedOut(PhoneController param1, PhoneController param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters PhoneController param1, PhoneController param2, BasePlayer param3"
  },
  "OnCupboardDeauthorize(VehiclePrivilege,BasePlayer)": {
    "prefix": "OnCupboardDeauthorize",
    "body": "void OnCupboardDeauthorize(VehiclePrivilege param1, BasePlayer param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters VehiclePrivilege param1, BasePlayer param2"
  },
  "OnBookmarkControlEnded(ComputerStation,BasePlayer,BaseEntity)": {
    "prefix": "OnBookmarkControlEnded",
    "body": "void OnBookmarkControlEnded(ComputerStation param1, BasePlayer param2, BaseEntity param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ComputerStation param1, BasePlayer param2, BaseEntity param3"
  },
  "IOnCupboardAuthorize(ulong,BasePlayer,BuildingPrivlidge)": {
    "prefix": "IOnCupboardAuthorize",
    "body": "void IOnCupboardAuthorize(ulong param1, BasePlayer param2, BuildingPrivlidge param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ulong param1, BasePlayer param2, BuildingPrivlidge param3"
  },
  "OnFishingRodCast(BaseFishingRod,BasePlayer,Item)": {
    "prefix": "OnFishingRodCast",
    "body": "void OnFishingRodCast(BaseFishingRod param1, BasePlayer param2, Item param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseFishingRod param1, BasePlayer param2, Item param3"
  },
  "IOnRunCommandLine()": {
    "prefix": "IOnRunCommandLine",
    "body": "void IOnRunCommandLine()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "IOnServerCommand(ConsoleSystem.Arg)": {
    "prefix": "IOnServerCommand",
    "body": "void IOnServerCommand(ConsoleSystem.Arg param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ConsoleSystem.Arg param1"
  },
  "OnClientDisconnected(Network.Connection,string)": {
    "prefix": "OnClientDisconnected",
    "body": "void OnClientDisconnected(Network.Connection param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1, string param2"
  },
  "OnNetworkSubscriptionsUpdate(Network.Networkable,System.Collections.Generic.List<Network.Visibility.Group>,unknown)": {
    "prefix": "OnNetworkSubscriptionsUpdate",
    "body": "void OnNetworkSubscriptionsUpdate(Network.Networkable param1, System.Collections.Generic.List<Network.Visibility.Group> param2, unknown param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Networkable param1, System.Collections.Generic.List<Network.Visibility.Group> param2, unknown param3"
  },
  "OnNetworkSubscriptionsUpdate(Network.Networkable,System.Collections.Generic.List<Network.Visibility.Group>,System.Collections.Generic.List<Network.Visibility.Group>)": {
    "prefix": "OnNetworkSubscriptionsUpdate",
    "body": "void OnNetworkSubscriptionsUpdate(Network.Networkable param1, System.Collections.Generic.List<Network.Visibility.Group> param2, System.Collections.Generic.List<Network.Visibility.Group> param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Networkable param1, System.Collections.Generic.List<Network.Visibility.Group> param2, System.Collections.Generic.List<Network.Visibility.Group> param3"
  },
  "OnGroupCreated(string,string,int)": {
    "prefix": "OnGroupCreated",
    "body": "void OnGroupCreated(string param1, string param2, int param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, string param2, int param3"
  },
  "OnUserNameUpdated(string,string,string)": {
    "prefix": "OnUserNameUpdated",
    "body": "void OnUserNameUpdated(string param1, string param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, string param2, string param3"
  },
  "OnGroupRankSet(string,int)": {
    "prefix": "OnGroupRankSet",
    "body": "void OnGroupRankSet(string param1, int param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, int param2"
  },
  "OnGroupTitleSet(string,string)": {
    "prefix": "OnGroupTitleSet",
    "body": "void OnGroupTitleSet(string param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, string param2"
  },
  "OnPermissionRegistered(string,Oxide.Core.Plugins.Plugin)": {
    "prefix": "OnPermissionRegistered",
    "body": "void OnPermissionRegistered(string param1, Oxide.Core.Plugins.Plugin param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, Oxide.Core.Plugins.Plugin param2"
  },
  "OnGroupParentSet(string,string)": {
    "prefix": "OnGroupParentSet",
    "body": "void OnGroupParentSet(string param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, string param2"
  },
  "OnGroupDeleted(string)": {
    "prefix": "OnGroupDeleted",
    "body": "void OnGroupDeleted(string param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1"
  },
  "OnRconCommand(System.Net.IPEndPoint,string,string[])": {
    "prefix": "OnRconCommand",
    "body": "void OnRconCommand(System.Net.IPEndPoint param1, string param2, string[] param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters System.Net.IPEndPoint param1, string param2, string[] param3"
  },
  "hookName(T0,T1,T2,T3)": {
    "prefix": "hookName",
    "body": "void hookName(T0 param1, T1 param2, T2 param3, T3 param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters T0 param1, T1 param2, T2 param3, T3 param4"
  },
  "hookName()": {
    "prefix": "hookName",
    "body": "void hookName()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "hookName(T0)": {
    "prefix": "hookName",
    "body": "void hookName(T0 param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters T0 param1"
  },
  "hookName(T0,T1)": {
    "prefix": "hookName",
    "body": "void hookName(T0 param1, T1 param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters T0 param1, T1 param2"
  },
  "hookName(T0,T1,T2)": {
    "prefix": "hookName",
    "body": "void hookName(T0 param1, T1 param2, T2 param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters T0 param1, T1 param2, T2 param3"
  },
  "OnMessagePlayer(string,BasePlayer,ulong)": {
    "prefix": "OnMessagePlayer",
    "body": "void OnMessagePlayer(string param1, BasePlayer param2, ulong param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, BasePlayer param2, ulong param3"
  },
  "OnDestroyUI(BasePlayer,string)": {
    "prefix": "OnDestroyUI",
    "body": "void OnDestroyUI(BasePlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2"
  },
  "OnUserCommand(Oxide.Core.Libraries.Covalence.IPlayer,string,string[])": {
    "prefix": "OnUserCommand",
    "body": "void OnUserCommand(Oxide.Core.Libraries.Covalence.IPlayer param1, string param2, string[] param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Oxide.Core.Libraries.Covalence.IPlayer param1, string param2, string[] param3"
  },
  "OnApplicationCommand(BasePlayer,string,string[])": {
    "prefix": "OnApplicationCommand",
    "body": "void OnApplicationCommand(BasePlayer param1, string param2, string[] param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2, string[] param3"
  },
  "OnPlayerLanguageChanged(Oxide.Core.Libraries.Covalence.IPlayer,string)": {
    "prefix": "OnPlayerLanguageChanged",
    "body": "void OnPlayerLanguageChanged(Oxide.Core.Libraries.Covalence.IPlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Oxide.Core.Libraries.Covalence.IPlayer param1, string param2"
  },
  "OnPlayerLanguageChanged(BasePlayer,string)": {
    "prefix": "OnPlayerLanguageChanged",
    "body": "void OnPlayerLanguageChanged(BasePlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2"
  },
  "OnUserRespawn(Oxide.Core.Libraries.Covalence.IPlayer)": {
    "prefix": "OnUserRespawn",
    "body": "void OnUserRespawn(Oxide.Core.Libraries.Covalence.IPlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Oxide.Core.Libraries.Covalence.IPlayer param1"
  },
  "OnApplicationCommand(Oxide.Core.Libraries.Covalence.IPlayer,string,string[])": {
    "prefix": "OnApplicationCommand",
    "body": "void OnApplicationCommand(Oxide.Core.Libraries.Covalence.IPlayer param1, string param2, string[] param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Oxide.Core.Libraries.Covalence.IPlayer param1, string param2, string[] param3"
  },
  "OnRconCommand(System.Net.IPAddress,string,string[])": {
    "prefix": "OnRconCommand",
    "body": "void OnRconCommand(System.Net.IPAddress param1, string param2, string[] param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters System.Net.IPAddress param1, string param2, string[] param3"
  },
  "OnEntityTakeDamage(BaseCombatEntity,HitInfo)": {
    "prefix": "OnEntityTakeDamage",
    "body": "void OnEntityTakeDamage(BaseCombatEntity param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseCombatEntity param1, HitInfo param2"
  },
  "OnUserRespawned(Oxide.Core.Libraries.Covalence.IPlayer)": {
    "prefix": "OnUserRespawned",
    "body": "void OnUserRespawned(Oxide.Core.Libraries.Covalence.IPlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Oxide.Core.Libraries.Covalence.IPlayer param1"
  },
  "OnUserDisconnected(Oxide.Core.Libraries.Covalence.IPlayer,string)": {
    "prefix": "OnUserDisconnected",
    "body": "void OnUserDisconnected(Oxide.Core.Libraries.Covalence.IPlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Oxide.Core.Libraries.Covalence.IPlayer param1, string param2"
  },
  "OnServerInitialized(bool)": {
    "prefix": "OnServerInitialized",
    "body": "void OnServerInitialized(bool param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters bool param1"
  },
  "OnCupboardAssign(BuildingPrivlidge,ulong,BasePlayer)": {
    "prefix": "OnCupboardAssign",
    "body": "void OnCupboardAssign(BuildingPrivlidge param1, ulong param2, BasePlayer param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BuildingPrivlidge param1, ulong param2, BasePlayer param3"
  },
  "CanUserLogin(string,string,string)": {
    "prefix": "CanUserLogin",
    "body": "void CanUserLogin(string param1, string param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, string param2, string param3"
  },
  "OnPlayerChat(BasePlayer,string,ConVar.Chat.ChatChannel)": {
    "prefix": "OnPlayerChat",
    "body": "void OnPlayerChat(BasePlayer param1, string param2, ConVar.Chat.ChatChannel param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2, ConVar.Chat.ChatChannel param3"
  },
  "OnUserUnbanned(string,string,string)": {
    "prefix": "OnUserUnbanned",
    "body": "void OnUserUnbanned(string param1, string param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, string param2, string param3"
  },
  "CanClientLogin(Network.Connection)": {
    "prefix": "CanClientLogin",
    "body": "void CanClientLogin(Network.Connection param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1"
  },
  "OnRconMessage(System.Net.IPAddress,Oxide.Core.RemoteConsole.RemoteMessage)": {
    "prefix": "OnRconMessage",
    "body": "void OnRconMessage(System.Net.IPAddress param1, Oxide.Core.RemoteConsole.RemoteMessage param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters System.Net.IPAddress param1, Oxide.Core.RemoteConsole.RemoteMessage param2"
  },
  "OnPlayerBanned(string,ulong,string,string,long)": {
    "prefix": "OnPlayerBanned",
    "body": "void OnPlayerBanned(string param1, ulong param2, string param3, string param4, long param5)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, ulong param2, string param3, string param4, long param5"
  },
  "OnPlayerOfflineChat(ulong,string,string,ConVar.Chat.ChatChannel)": {
    "prefix": "OnPlayerOfflineChat",
    "body": "void OnPlayerOfflineChat(ulong param1, string param2, string param3, ConVar.Chat.ChatChannel param4)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ulong param1, string param2, string param3, ConVar.Chat.ChatChannel param4"
  },
  "OnNpcTarget(BaseNpc,BaseEntity)": {
    "prefix": "OnNpcTarget",
    "body": "void OnNpcTarget(BaseNpc param1, BaseEntity param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNpc param1, BaseEntity param2"
  },
  "OnUserKicked(Oxide.Core.Libraries.Covalence.IPlayer,string)": {
    "prefix": "OnUserKicked",
    "body": "void OnUserKicked(Oxide.Core.Libraries.Covalence.IPlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Oxide.Core.Libraries.Covalence.IPlayer param1, string param2"
  },
  "OnUserConnected(Oxide.Core.Libraries.Covalence.IPlayer)": {
    "prefix": "OnUserConnected",
    "body": "void OnUserConnected(Oxide.Core.Libraries.Covalence.IPlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Oxide.Core.Libraries.Covalence.IPlayer param1"
  },
  "OnServerCommand(string,string[])": {
    "prefix": "OnServerCommand",
    "body": "void OnServerCommand(string param1, string[] param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, string[] param2"
  },
  "OnLoseCondition(object[])": {
    "prefix": "OnLoseCondition",
    "body": "void OnLoseCondition(object[] param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters object[] param1"
  },
  "OnServerCommand(ConsoleSystem.Arg)": {
    "prefix": "OnServerCommand",
    "body": "void OnServerCommand(ConsoleSystem.Arg param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters ConsoleSystem.Arg param1"
  },
  "OnServerShutdown()": {
    "prefix": "OnServerShutdown",
    "body": "void OnServerShutdown()\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters "
  },
  "OnUserBanned(string,string,string,string,long)": {
    "prefix": "OnUserBanned",
    "body": "void OnUserBanned(string param1, string param2, string param3, string param4, long param5)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, string param2, string param3, string param4, long param5"
  },
  "OnEntityTakeDamage(BasePlayer,HitInfo)": {
    "prefix": "OnEntityTakeDamage",
    "body": "void OnEntityTakeDamage(BasePlayer param1, HitInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, HitInfo param2"
  },
  "OnUserApproved(string,string,string)": {
    "prefix": "OnUserApproved",
    "body": "void OnUserApproved(string param1, string param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, string param2, string param3"
  },
  "OnUserChat(Oxide.Core.Libraries.Covalence.IPlayer,string)": {
    "prefix": "OnUserChat",
    "body": "void OnUserChat(Oxide.Core.Libraries.Covalence.IPlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Oxide.Core.Libraries.Covalence.IPlayer param1, string param2"
  },
  "OnPlayerConnected(BasePlayer)": {
    "prefix": "OnPlayerConnected",
    "body": "void OnPlayerConnected(BasePlayer param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1"
  },
  "OnEntitySaved(BaseNetworkable,BaseNetworkable.SaveInfo)": {
    "prefix": "OnEntitySaved",
    "body": "void OnEntitySaved(BaseNetworkable param1, BaseNetworkable.SaveInfo param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BaseNetworkable param1, BaseNetworkable.SaveInfo param2"
  },
  "OnPlayerCommand(BasePlayer,string,string[])": {
    "prefix": "OnPlayerCommand",
    "body": "void OnPlayerCommand(BasePlayer param1, string param2, string[] param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2, string[] param3"
  },
  "CanUseUI(BasePlayer,string)": {
    "prefix": "CanUseUI",
    "body": "void CanUseUI(BasePlayer param1, string param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, string param2"
  },
  "OnPlayerUnbanned(string,ulong,string)": {
    "prefix": "OnPlayerUnbanned",
    "body": "void OnPlayerUnbanned(string param1, ulong param2, string param3)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters string param1, ulong param2, string param3"
  },
  "OnUserApprove(Network.Connection)": {
    "prefix": "OnUserApprove",
    "body": "void OnUserApprove(Network.Connection param1)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters Network.Connection param1"
  },
  "CanPickupEntity(BasePlayer,DoorCloser)": {
    "prefix": "CanPickupEntity",
    "body": "void CanPickupEntity(BasePlayer param1, DoorCloser param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters BasePlayer param1, DoorCloser param2"
  },
  "OnClanMemberAdded(long,ulong)": {
    "prefix": "OnClanMemberAdded",
    "body": "void OnClanMemberAdded(long param1, ulong param2)\n{\n    // Hook logic here\n}",
    "description": "Hook with parameters long param1, ulong param2"
  }
}